Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     if_statement -> IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
Rule 2     try_catch_finally -> TRY BACKSLASH statement_list_opt
Rule 3     jtml_body -> jtml_attributes BACKSLASH jtml_content_item_list
Rule 4     jtml_body -> jtml_attributes
Rule 5     jtml_body -> jtml_content_item_list
Rule 6     jtml_body -> jtml_empty
Rule 7     connect_statement -> CONNECT TO STRING_LITERAL AS IDENTIFIER
Rule 8     quantum_statement -> quantum_define_qubit
Rule 9     quantum_statement -> quantum_apply
Rule 10    quantum_statement -> quantum_measure_expr
Rule 11    expression_statement -> expression
Rule 12    type -> type_name
Rule 13    type -> type_name generic_arguments
Rule 14    variable_declaration -> DEFINE IDENTIFIER COLON type EQUALS expression
Rule 15    if_statement -> IF LPAREN expression RPAREN BACKSLASH statement_list_opt
Rule 16    expression -> assignment_expression
Rule 17    function_declaration -> function_head BACKSLASH function_body
Rule 18    crypto_statement -> crypto_generate_key_expr
Rule 19    crypto_statement -> crypto_derive_public_key_expr
Rule 20    crypto_statement -> crypto_encrypt_expr
Rule 21    crypto_statement -> crypto_decrypt_expr
Rule 22    crypto_statement -> crypto_hash_expr
Rule 23    crypto_statement -> crypto_sign_expr
Rule 24    crypto_statement -> crypto_verify_expr
Rule 25    try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
Rule 26    query_statement -> QUERY ON IDENTIFIER COLON STRING_LITERAL
Rule 27    show_statement -> SHOW expression
Rule 28    while_statement -> WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
Rule 29    assignment_expression -> IDENTIFIER PLUSEQ expression
Rule 30    quantum_define_qubit -> DEFINE IDENTIFIER AS QUBIT
Rule 31    variable_declaration -> DEFINE IDENTIFIER EQUALS expression
Rule 32    try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
Rule 33    transaction_block -> TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
Rule 34    save_statement -> SAVE IDENTIFIER EQUALS expression
Rule 35    for_statement -> FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
Rule 36    assignment_expression -> IDENTIFIER EQUALS expression
Rule 37    quantum_apply -> APPLY IDENTIFIER ON identifier_list
Rule 38    try_catch_finally -> TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
Rule 39    crypto_generate_key_expr -> DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
Rule 40    commit_rollback -> COMMIT
Rule 41    commit_rollback -> ROLLBACK
Rule 42    delete_statement -> DELETE IDENTIFIER
Rule 43    const_declaration -> CONST IDENTIFIER COLON type EQUALS expression
Rule 44    assignment_expression -> logical_or_expression
Rule 45    function_head -> ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
Rule 46    quantum_measure_expr -> DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
Rule 47    throw_statement -> THROW expression
Rule 48    type_name -> IDENTIFIER
Rule 49    type_name -> TYPE
Rule 50    logical_or_expression -> logical_or_expression OR logical_and_expression
Rule 51    logical_or_expression -> logical_and_expression
Rule 52    function_head -> FUNCTION IDENTIFIER parameter_list function_return_type
Rule 53    const_declaration -> CONST IDENTIFIER EQUALS expression
Rule 54    return_statement -> RETURN expression
Rule 55    function_body -> statement_list
Rule 56    type_spec -> TYPE COLON STRING_LITERAL
Rule 57    return_statement -> RETURN
Rule 58    logical_and_expression -> logical_and_expression AND equality_expression
Rule 59    logical_and_expression -> equality_expression
Rule 60    param_list_opt -> COMMA param_list
Rule 61    param_list_opt -> empty
Rule 62    crypto_derive_public_key_expr -> DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
Rule 63    jtml_attributes -> jtml_attributes attribute
Rule 64    jtml_attributes -> attribute
Rule 65    crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
Rule 66    equality_expression -> equality_expression EQEQ relational_expression
Rule 67    equality_expression -> equality_expression NEQ relational_expression
Rule 68    equality_expression -> relational_expression
Rule 69    param_list -> param_list COMMA param
Rule 70    attribute -> IDENTIFIER COLON STRING_LITERAL
Rule 71    param_list -> param
Rule 72    closing_tag -> HASH
Rule 73    closing_tag -> HASH IDENTIFIER
Rule 74    crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
Rule 75    relational_expression -> relational_expression LESS additive_expression
Rule 76    relational_expression -> relational_expression GREATER additive_expression
Rule 77    relational_expression -> relational_expression LEQ additive_expression
Rule 78    relational_expression -> relational_expression GEQ additive_expression
Rule 79    relational_expression -> additive_expression
Rule 80    param -> IDENTIFIER COLON value
Rule 81    param -> DB COLON value
Rule 82    param -> SIZE COLON value
Rule 83    param -> ALGORITHM COLON value
Rule 84    param -> KEY COLON value
Rule 85    param -> DATA COLON value
Rule 86    param -> SIGNATURE COLON value
Rule 87    empty -> <empty>
Rule 88    program -> item_list
Rule 89    program -> item_list BACKSLASH
Rule 90    program -> empty
Rule 91    jtml_content_item_list -> jtml_content_item_list jtml_content_item
Rule 92    jtml_content_item_list -> jtml_content_item
Rule 93    crypto_hash_expr -> DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
Rule 94    additive_expression -> additive_expression PLUS multiplicative_expression
Rule 95    additive_expression -> additive_expression MINUS multiplicative_expression
Rule 96    additive_expression -> multiplicative_expression
Rule 97    item_list -> item_list item
Rule 98    item_list -> item
Rule 99    class_declaration -> CLASS IDENTIFIER BACKSLASH statement_list_opt
Rule 100   jtml_content_item -> statement BACKSLASH
Rule 101   jtml_content_item -> expression BACKSLASH
Rule 102   jtml_content_item -> dynamic_content BACKSLASH
Rule 103   crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
Rule 104   item -> statement BACKSLASH
Rule 105   item -> jtml_element
Rule 106   multiplicative_expression -> multiplicative_expression TIMES unary_expression
Rule 107   multiplicative_expression -> multiplicative_expression DIVIDE unary_expression
Rule 108   multiplicative_expression -> unary_expression
Rule 109   dynamic_content -> HASH LPAREN IDENTIFIER RPAREN
Rule 110   statement_list_opt -> statement_list
Rule 111   statement_list_opt -> jtml_element
Rule 112   statement_list_opt -> empty
Rule 113   crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
Rule 114   value -> STRING_LITERAL
Rule 115   value -> INT_LITERAL
Rule 116   unary_expression -> NOT unary_expression
Rule 117   jtml_empty -> <empty>
Rule 118   generic_arguments -> LESS type_list GREATER
Rule 119   statement_list -> statement BACKSLASH
Rule 120   unary_expression -> AWAIT unary_expression
Rule 121   type_list -> type
Rule 122   statement_list -> statement BACKSLASH statement_list
Rule 123   unary_expression -> postfix_expression
Rule 124   type_list -> type_list COMMA type
Rule 125   statement -> variable_declaration
Rule 126   statement -> const_declaration
Rule 127   statement -> show_statement
Rule 128   statement -> save_statement
Rule 129   statement -> delete_statement
Rule 130   statement -> return_statement
Rule 131   statement -> throw_statement
Rule 132   statement -> connect_statement
Rule 133   statement -> query_statement
Rule 134   statement -> crypto_statement
Rule 135   statement -> quantum_statement
Rule 136   statement -> expression_statement
Rule 137   statement -> function_declaration
Rule 138   statement -> class_declaration
Rule 139   statement -> if_statement
Rule 140   statement -> while_statement
Rule 141   statement -> for_statement
Rule 142   statement -> try_catch_finally
Rule 143   statement -> transaction_block
Rule 144   postfix_expression -> postfix_expression DOT IDENTIFIER
Rule 145   parameter_list -> LPAREN parameters_opt RPAREN
Rule 146   postfix_expression -> postfix_expression LPAREN argument_list RPAREN
Rule 147   parameters_opt -> parameters
Rule 148   parameters_opt -> empty
Rule 149   postfix_expression -> primary_expression
Rule 150   parameters -> parameters COMMA parameter
Rule 151   primary_expression -> INT_LITERAL
Rule 152   primary_expression -> FLOAT_LITERAL
Rule 153   primary_expression -> STRING_LITERAL
Rule 154   primary_expression -> BOOL_LITERAL
Rule 155   parameters -> parameter
Rule 156   parameter -> IDENTIFIER COLON type
Rule 157   jtml_element -> HASH IDENTIFIER jtml_body closing_tag
Rule 158   function_return_type -> COLON type
Rule 159   primary_expression -> IDENTIFIER
Rule 160   function_return_type -> empty
Rule 161   primary_expression -> LPAREN expression RPAREN
Rule 162   argument_list -> expression
Rule 163   argument_list -> argument_list COMMA expression
Rule 164   argument_list -> empty
Rule 165   primary_expression -> MINUS INT_LITERAL
Rule 166   primary_expression -> MINUS FLOAT_LITERAL
Rule 167   identifier_list -> IDENTIFIER
Rule 168   identifier_list -> identifier_list COMMA IDENTIFIER

Terminals, with rules where they appear

ALGORITHM            : 65 74 83 93 103 113
AND                  : 58
APPLY                : 37
AS                   : 7 30
ASYNC                : 45
AWAIT                : 120
BACKSLASH            : 1 1 2 3 15 17 25 25 28 32 32 32 33 33 33 35 38 38 89 99 100 101 102 104 119 122
BOOL_LITERAL         : 154
CATCH                : 25 32
CLASS                : 99
COLON                : 14 26 43 56 65 65 65 70 74 74 74 80 81 82 83 84 85 86 93 93 103 103 103 113 113 113 113 156 158
COMMA                : 60 69 124 150 163 168
COMMIT               : 40
CONNECT              : 7
CONST                : 43 53
DATA                 : 65 74 85 93 103 113
DB                   : 81
DECRYPT              : 74
DEFINE               : 14 30 31 39 46 62 65 74 93 103 113
DELETE               : 42
DERIVE_PUBLIC_KEY    : 62
DIVIDE               : 107
DOT                  : 144
ELSE                 : 1
ENCRYPT              : 65
EQEQ                 : 66
EQUALS               : 14 31 34 36 39 43 46 53 62 65 74 93 103 113
FINALLY              : 32 38
FLOAT_LITERAL        : 152 166
FOR                  : 35
FROM                 : 62
FUNCTION             : 45 52
GENERATE_KEY         : 39
GEQ                  : 78
GREATER              : 76 118
HASH                 : 72 73 93 109 157
IDENTIFIER           : 7 14 25 26 29 30 31 32 33 34 35 36 37 39 42 43 45 46 46 48 52 53 62 62 65 70 73 74 80 93 99 103 109 113 144 156 157 159 167 168
IF                   : 1 15
IN                   : 35
INT_LITERAL          : 115 151 165
KEY                  : 65 74 84 103 113
LEQ                  : 77
LESS                 : 75 118
LPAREN               : 1 15 25 28 32 35 109 145 146 161
MEASURE              : 46
MINUS                : 95 165 166
NEQ                  : 67
NOT                  : 116
ON                   : 26 33 37
OR                   : 50
PLUS                 : 94
PLUSEQ               : 29
QUBIT                : 30
QUERY                : 26
RETURN               : 54 57
ROLLBACK             : 41
RPAREN               : 1 15 25 28 32 35 109 145 146 161
SAVE                 : 34
SHOW                 : 27
SIGN                 : 103
SIGNATURE            : 86 113
SIZE                 : 82
STRING_LITERAL       : 7 26 56 65 65 65 70 74 74 74 93 93 103 103 103 113 113 113 113 114 153
THROW                : 47
TIMES                : 106
TO                   : 7
TRANSACTION          : 33
TRY                  : 2 25 32 38
TYPE                 : 49 56
VERIFY               : 113
WHILE                : 28
WITH                 : 65 74 103 113
error                : 

Nonterminals, with rules where they appear

additive_expression  : 75 76 77 78 79 94 95
argument_list        : 146 163
assignment_expression : 16
attribute            : 63 64
class_declaration    : 138
closing_tag          : 157
commit_rollback      : 33
connect_statement    : 132
const_declaration    : 126
crypto_decrypt_expr  : 21
crypto_derive_public_key_expr : 19
crypto_encrypt_expr  : 20
crypto_generate_key_expr : 18
crypto_hash_expr     : 22
crypto_sign_expr     : 23
crypto_statement     : 134
crypto_verify_expr   : 24
delete_statement     : 129
dynamic_content      : 102
empty                : 61 90 112 148 160 164
equality_expression  : 58 59 66 67
expression           : 1 11 14 15 27 28 29 31 34 35 36 43 47 53 54 101 161 162 163
expression_statement : 136
for_statement        : 141
function_body        : 17
function_declaration : 137
function_head        : 17
function_return_type : 45 52
generic_arguments    : 13
identifier_list      : 37 168
if_statement         : 139
item                 : 97 98
item_list            : 88 89 97
jtml_attributes      : 3 4 63
jtml_body            : 157
jtml_content_item    : 91 92
jtml_content_item_list : 3 5 91
jtml_element         : 105 111
jtml_empty           : 6
logical_and_expression : 50 51 58
logical_or_expression : 44 50
multiplicative_expression : 94 95 96 106 107
param                : 69 71
param_list           : 60 69
param_list_opt       : 39
parameter            : 150 155
parameter_list       : 45 52
parameters           : 147 150
parameters_opt       : 145
postfix_expression   : 123 144 146
primary_expression   : 149
program              : 0
quantum_apply        : 9
quantum_define_qubit : 8
quantum_measure_expr : 10
quantum_statement    : 135
query_statement      : 133
relational_expression : 66 67 68 75 76 77 78
return_statement     : 130
save_statement       : 128
show_statement       : 127
statement            : 100 104 119 122
statement_list       : 55 110 122
statement_list_opt   : 1 1 2 15 25 25 28 32 32 32 33 35 38 38 99
throw_statement      : 131
transaction_block    : 143
try_catch_finally    : 142
type                 : 14 43 121 124 156 158
type_list            : 118 124
type_name            : 12 13
type_spec            : 39
unary_expression     : 106 107 108 116 120
value                : 80 81 82 83 84 85 86
variable_declaration : 125
while_statement      : 140

Parsing method: LALR

state 0

    (0) S' -> . program
    (88) program -> . item_list
    (89) program -> . item_list BACKSLASH
    (90) program -> . empty
    (97) item_list -> . item_list item
    (98) item_list -> . item
    (87) empty -> .
    (104) item -> . statement BACKSLASH
    (105) item -> . jtml_element
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    $end            reduce using rule 87 (empty -> .)
    HASH            shift and go to state 26
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    program                        shift and go to state 1
    item_list                      shift and go to state 2
    empty                          shift and go to state 3
    item                           shift and go to state 4
    statement                      shift and go to state 5
    jtml_element                   shift and go to state 6
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 1

    (0) S' -> program .



state 2

    (88) program -> item_list .
    (89) program -> item_list . BACKSLASH
    (97) item_list -> item_list . item
    (104) item -> . statement BACKSLASH
    (105) item -> . jtml_element
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    $end            reduce using rule 88 (program -> item_list .)
    BACKSLASH       shift and go to state 76
    HASH            shift and go to state 26
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    item                           shift and go to state 77
    statement                      shift and go to state 5
    jtml_element                   shift and go to state 6
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 3

    (90) program -> empty .

    $end            reduce using rule 90 (program -> empty .)


state 4

    (98) item_list -> item .

    BACKSLASH       reduce using rule 98 (item_list -> item .)
    HASH            reduce using rule 98 (item_list -> item .)
    DEFINE          reduce using rule 98 (item_list -> item .)
    CONST           reduce using rule 98 (item_list -> item .)
    SHOW            reduce using rule 98 (item_list -> item .)
    SAVE            reduce using rule 98 (item_list -> item .)
    DELETE          reduce using rule 98 (item_list -> item .)
    RETURN          reduce using rule 98 (item_list -> item .)
    THROW           reduce using rule 98 (item_list -> item .)
    CONNECT         reduce using rule 98 (item_list -> item .)
    QUERY           reduce using rule 98 (item_list -> item .)
    CLASS           reduce using rule 98 (item_list -> item .)
    IF              reduce using rule 98 (item_list -> item .)
    WHILE           reduce using rule 98 (item_list -> item .)
    FOR             reduce using rule 98 (item_list -> item .)
    TRY             reduce using rule 98 (item_list -> item .)
    TRANSACTION     reduce using rule 98 (item_list -> item .)
    APPLY           reduce using rule 98 (item_list -> item .)
    ASYNC           reduce using rule 98 (item_list -> item .)
    FUNCTION        reduce using rule 98 (item_list -> item .)
    IDENTIFIER      reduce using rule 98 (item_list -> item .)
    NOT             reduce using rule 98 (item_list -> item .)
    AWAIT           reduce using rule 98 (item_list -> item .)
    INT_LITERAL     reduce using rule 98 (item_list -> item .)
    FLOAT_LITERAL   reduce using rule 98 (item_list -> item .)
    STRING_LITERAL  reduce using rule 98 (item_list -> item .)
    BOOL_LITERAL    reduce using rule 98 (item_list -> item .)
    LPAREN          reduce using rule 98 (item_list -> item .)
    MINUS           reduce using rule 98 (item_list -> item .)
    $end            reduce using rule 98 (item_list -> item .)


state 5

    (104) item -> statement . BACKSLASH

    BACKSLASH       shift and go to state 78


state 6

    (105) item -> jtml_element .

    BACKSLASH       reduce using rule 105 (item -> jtml_element .)
    HASH            reduce using rule 105 (item -> jtml_element .)
    DEFINE          reduce using rule 105 (item -> jtml_element .)
    CONST           reduce using rule 105 (item -> jtml_element .)
    SHOW            reduce using rule 105 (item -> jtml_element .)
    SAVE            reduce using rule 105 (item -> jtml_element .)
    DELETE          reduce using rule 105 (item -> jtml_element .)
    RETURN          reduce using rule 105 (item -> jtml_element .)
    THROW           reduce using rule 105 (item -> jtml_element .)
    CONNECT         reduce using rule 105 (item -> jtml_element .)
    QUERY           reduce using rule 105 (item -> jtml_element .)
    CLASS           reduce using rule 105 (item -> jtml_element .)
    IF              reduce using rule 105 (item -> jtml_element .)
    WHILE           reduce using rule 105 (item -> jtml_element .)
    FOR             reduce using rule 105 (item -> jtml_element .)
    TRY             reduce using rule 105 (item -> jtml_element .)
    TRANSACTION     reduce using rule 105 (item -> jtml_element .)
    APPLY           reduce using rule 105 (item -> jtml_element .)
    ASYNC           reduce using rule 105 (item -> jtml_element .)
    FUNCTION        reduce using rule 105 (item -> jtml_element .)
    IDENTIFIER      reduce using rule 105 (item -> jtml_element .)
    NOT             reduce using rule 105 (item -> jtml_element .)
    AWAIT           reduce using rule 105 (item -> jtml_element .)
    INT_LITERAL     reduce using rule 105 (item -> jtml_element .)
    FLOAT_LITERAL   reduce using rule 105 (item -> jtml_element .)
    STRING_LITERAL  reduce using rule 105 (item -> jtml_element .)
    BOOL_LITERAL    reduce using rule 105 (item -> jtml_element .)
    LPAREN          reduce using rule 105 (item -> jtml_element .)
    MINUS           reduce using rule 105 (item -> jtml_element .)
    $end            reduce using rule 105 (item -> jtml_element .)


state 7

    (125) statement -> variable_declaration .

    BACKSLASH       reduce using rule 125 (statement -> variable_declaration .)


state 8

    (126) statement -> const_declaration .

    BACKSLASH       reduce using rule 126 (statement -> const_declaration .)


state 9

    (127) statement -> show_statement .

    BACKSLASH       reduce using rule 127 (statement -> show_statement .)


state 10

    (128) statement -> save_statement .

    BACKSLASH       reduce using rule 128 (statement -> save_statement .)


state 11

    (129) statement -> delete_statement .

    BACKSLASH       reduce using rule 129 (statement -> delete_statement .)


state 12

    (130) statement -> return_statement .

    BACKSLASH       reduce using rule 130 (statement -> return_statement .)


state 13

    (131) statement -> throw_statement .

    BACKSLASH       reduce using rule 131 (statement -> throw_statement .)


state 14

    (132) statement -> connect_statement .

    BACKSLASH       reduce using rule 132 (statement -> connect_statement .)


state 15

    (133) statement -> query_statement .

    BACKSLASH       reduce using rule 133 (statement -> query_statement .)


state 16

    (134) statement -> crypto_statement .

    BACKSLASH       reduce using rule 134 (statement -> crypto_statement .)


state 17

    (135) statement -> quantum_statement .

    BACKSLASH       reduce using rule 135 (statement -> quantum_statement .)


state 18

    (136) statement -> expression_statement .

    BACKSLASH       reduce using rule 136 (statement -> expression_statement .)


state 19

    (137) statement -> function_declaration .

    BACKSLASH       reduce using rule 137 (statement -> function_declaration .)


state 20

    (138) statement -> class_declaration .

    BACKSLASH       reduce using rule 138 (statement -> class_declaration .)


state 21

    (139) statement -> if_statement .

    BACKSLASH       reduce using rule 139 (statement -> if_statement .)


state 22

    (140) statement -> while_statement .

    BACKSLASH       reduce using rule 140 (statement -> while_statement .)


state 23

    (141) statement -> for_statement .

    BACKSLASH       reduce using rule 141 (statement -> for_statement .)


state 24

    (142) statement -> try_catch_finally .

    BACKSLASH       reduce using rule 142 (statement -> try_catch_finally .)


state 25

    (143) statement -> transaction_block .

    BACKSLASH       reduce using rule 143 (statement -> transaction_block .)


state 26

    (157) jtml_element -> HASH . IDENTIFIER jtml_body closing_tag

    IDENTIFIER      shift and go to state 79


state 27

    (29) assignment_expression -> IDENTIFIER . PLUSEQ expression
    (36) assignment_expression -> IDENTIFIER . EQUALS expression
    (159) primary_expression -> IDENTIFIER .

    PLUSEQ          shift and go to state 80
    EQUALS          shift and go to state 81
    DOT             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    LPAREN          reduce using rule 159 (primary_expression -> IDENTIFIER .)
    TIMES           reduce using rule 159 (primary_expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 159 (primary_expression -> IDENTIFIER .)
    PLUS            reduce using rule 159 (primary_expression -> IDENTIFIER .)
    MINUS           reduce using rule 159 (primary_expression -> IDENTIFIER .)
    LESS            reduce using rule 159 (primary_expression -> IDENTIFIER .)
    GREATER         reduce using rule 159 (primary_expression -> IDENTIFIER .)
    LEQ             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    GEQ             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    EQEQ            reduce using rule 159 (primary_expression -> IDENTIFIER .)
    NEQ             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    AND             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    OR              reduce using rule 159 (primary_expression -> IDENTIFIER .)
    BACKSLASH       reduce using rule 159 (primary_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 159 (primary_expression -> IDENTIFIER .)
    COMMA           reduce using rule 159 (primary_expression -> IDENTIFIER .)


state 28

    (14) variable_declaration -> DEFINE . IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> DEFINE . IDENTIFIER EQUALS expression
    (39) crypto_generate_key_expr -> DEFINE . IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> DEFINE . IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> DEFINE . IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> DEFINE . IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> DEFINE . IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> DEFINE . IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> DEFINE . IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> DEFINE . IDENTIFIER AS QUBIT
    (46) quantum_measure_expr -> DEFINE . IDENTIFIER EQUALS MEASURE IDENTIFIER

    IDENTIFIER      shift and go to state 82


state 29

    (11) expression_statement -> expression .

    BACKSLASH       reduce using rule 11 (expression_statement -> expression .)


state 30

    (43) const_declaration -> CONST . IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> CONST . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 83


state 31

    (27) show_statement -> SHOW . expression
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 84
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 32

    (34) save_statement -> SAVE . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 85


state 33

    (42) delete_statement -> DELETE . IDENTIFIER

    IDENTIFIER      shift and go to state 86


state 34

    (54) return_statement -> RETURN . expression
    (57) return_statement -> RETURN .
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    BACKSLASH       reduce using rule 57 (return_statement -> RETURN .)
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 87
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 35

    (47) throw_statement -> THROW . expression
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 88
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 36

    (7) connect_statement -> CONNECT . TO STRING_LITERAL AS IDENTIFIER

    TO              shift and go to state 89


state 37

    (153) primary_expression -> STRING_LITERAL .

    DOT             reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    LPAREN          reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    TIMES           reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    DIVIDE          reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    PLUS            reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    MINUS           reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    LESS            reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    GREATER         reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    LEQ             reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    GEQ             reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    EQEQ            reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    NEQ             reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    AND             reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    OR              reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    BACKSLASH       reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 153 (primary_expression -> STRING_LITERAL .)
    COMMA           reduce using rule 153 (primary_expression -> STRING_LITERAL .)


state 38

    (26) query_statement -> QUERY . ON IDENTIFIER COLON STRING_LITERAL

    ON              shift and go to state 90


state 39

    (18) crypto_statement -> crypto_generate_key_expr .

    BACKSLASH       reduce using rule 18 (crypto_statement -> crypto_generate_key_expr .)


state 40

    (19) crypto_statement -> crypto_derive_public_key_expr .

    BACKSLASH       reduce using rule 19 (crypto_statement -> crypto_derive_public_key_expr .)


state 41

    (20) crypto_statement -> crypto_encrypt_expr .

    BACKSLASH       reduce using rule 20 (crypto_statement -> crypto_encrypt_expr .)


state 42

    (21) crypto_statement -> crypto_decrypt_expr .

    BACKSLASH       reduce using rule 21 (crypto_statement -> crypto_decrypt_expr .)


state 43

    (22) crypto_statement -> crypto_hash_expr .

    BACKSLASH       reduce using rule 22 (crypto_statement -> crypto_hash_expr .)


state 44

    (23) crypto_statement -> crypto_sign_expr .

    BACKSLASH       reduce using rule 23 (crypto_statement -> crypto_sign_expr .)


state 45

    (24) crypto_statement -> crypto_verify_expr .

    BACKSLASH       reduce using rule 24 (crypto_statement -> crypto_verify_expr .)


state 46

    (8) quantum_statement -> quantum_define_qubit .

    BACKSLASH       reduce using rule 8 (quantum_statement -> quantum_define_qubit .)


state 47

    (9) quantum_statement -> quantum_apply .

    BACKSLASH       reduce using rule 9 (quantum_statement -> quantum_apply .)


state 48

    (10) quantum_statement -> quantum_measure_expr .

    BACKSLASH       reduce using rule 10 (quantum_statement -> quantum_measure_expr .)


state 49

    (17) function_declaration -> function_head . BACKSLASH function_body

    BACKSLASH       shift and go to state 91


state 50

    (99) class_declaration -> CLASS . IDENTIFIER BACKSLASH statement_list_opt

    IDENTIFIER      shift and go to state 92


state 51

    (1) if_statement -> IF . LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> IF . LPAREN expression RPAREN BACKSLASH statement_list_opt

    LPAREN          shift and go to state 93


state 52

    (161) primary_expression -> LPAREN . expression RPAREN
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 94
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 53

    (28) while_statement -> WHILE . LPAREN expression RPAREN BACKSLASH statement_list_opt

    LPAREN          shift and go to state 95


state 54

    (35) for_statement -> FOR . LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt

    LPAREN          shift and go to state 96


state 55

    (2) try_catch_finally -> TRY . BACKSLASH statement_list_opt
    (25) try_catch_finally -> TRY . BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> TRY . BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> TRY . BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt

    BACKSLASH       shift and go to state 97


state 56

    (33) transaction_block -> TRANSACTION . ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH

    ON              shift and go to state 98


state 57

    (37) quantum_apply -> APPLY . IDENTIFIER ON identifier_list

    IDENTIFIER      shift and go to state 99


state 58

    (16) expression -> assignment_expression .

    BACKSLASH       reduce using rule 16 (expression -> assignment_expression .)
    RPAREN          reduce using rule 16 (expression -> assignment_expression .)
    COMMA           reduce using rule 16 (expression -> assignment_expression .)


state 59

    (45) function_head -> ASYNC . FUNCTION IDENTIFIER parameter_list function_return_type

    FUNCTION        shift and go to state 100


state 60

    (52) function_head -> FUNCTION . IDENTIFIER parameter_list function_return_type

    IDENTIFIER      shift and go to state 101


state 61

    (44) assignment_expression -> logical_or_expression .
    (50) logical_or_expression -> logical_or_expression . OR logical_and_expression

    BACKSLASH       reduce using rule 44 (assignment_expression -> logical_or_expression .)
    RPAREN          reduce using rule 44 (assignment_expression -> logical_or_expression .)
    COMMA           reduce using rule 44 (assignment_expression -> logical_or_expression .)
    OR              shift and go to state 102


state 62

    (51) logical_or_expression -> logical_and_expression .
    (58) logical_and_expression -> logical_and_expression . AND equality_expression

    OR              reduce using rule 51 (logical_or_expression -> logical_and_expression .)
    BACKSLASH       reduce using rule 51 (logical_or_expression -> logical_and_expression .)
    RPAREN          reduce using rule 51 (logical_or_expression -> logical_and_expression .)
    COMMA           reduce using rule 51 (logical_or_expression -> logical_and_expression .)
    AND             shift and go to state 103


state 63

    (59) logical_and_expression -> equality_expression .
    (66) equality_expression -> equality_expression . EQEQ relational_expression
    (67) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 59 (logical_and_expression -> equality_expression .)
    OR              reduce using rule 59 (logical_and_expression -> equality_expression .)
    BACKSLASH       reduce using rule 59 (logical_and_expression -> equality_expression .)
    RPAREN          reduce using rule 59 (logical_and_expression -> equality_expression .)
    COMMA           reduce using rule 59 (logical_and_expression -> equality_expression .)
    EQEQ            shift and go to state 104
    NEQ             shift and go to state 105


state 64

    (68) equality_expression -> relational_expression .
    (75) relational_expression -> relational_expression . LESS additive_expression
    (76) relational_expression -> relational_expression . GREATER additive_expression
    (77) relational_expression -> relational_expression . LEQ additive_expression
    (78) relational_expression -> relational_expression . GEQ additive_expression

    EQEQ            reduce using rule 68 (equality_expression -> relational_expression .)
    NEQ             reduce using rule 68 (equality_expression -> relational_expression .)
    AND             reduce using rule 68 (equality_expression -> relational_expression .)
    OR              reduce using rule 68 (equality_expression -> relational_expression .)
    BACKSLASH       reduce using rule 68 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 68 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 68 (equality_expression -> relational_expression .)
    LESS            shift and go to state 106
    GREATER         shift and go to state 107
    LEQ             shift and go to state 108
    GEQ             shift and go to state 109


state 65

    (79) relational_expression -> additive_expression .
    (94) additive_expression -> additive_expression . PLUS multiplicative_expression
    (95) additive_expression -> additive_expression . MINUS multiplicative_expression

    LESS            reduce using rule 79 (relational_expression -> additive_expression .)
    GREATER         reduce using rule 79 (relational_expression -> additive_expression .)
    LEQ             reduce using rule 79 (relational_expression -> additive_expression .)
    GEQ             reduce using rule 79 (relational_expression -> additive_expression .)
    EQEQ            reduce using rule 79 (relational_expression -> additive_expression .)
    NEQ             reduce using rule 79 (relational_expression -> additive_expression .)
    AND             reduce using rule 79 (relational_expression -> additive_expression .)
    OR              reduce using rule 79 (relational_expression -> additive_expression .)
    BACKSLASH       reduce using rule 79 (relational_expression -> additive_expression .)
    RPAREN          reduce using rule 79 (relational_expression -> additive_expression .)
    COMMA           reduce using rule 79 (relational_expression -> additive_expression .)
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 66

    (96) additive_expression -> multiplicative_expression .
    (106) multiplicative_expression -> multiplicative_expression . TIMES unary_expression
    (107) multiplicative_expression -> multiplicative_expression . DIVIDE unary_expression

    PLUS            reduce using rule 96 (additive_expression -> multiplicative_expression .)
    MINUS           reduce using rule 96 (additive_expression -> multiplicative_expression .)
    LESS            reduce using rule 96 (additive_expression -> multiplicative_expression .)
    GREATER         reduce using rule 96 (additive_expression -> multiplicative_expression .)
    LEQ             reduce using rule 96 (additive_expression -> multiplicative_expression .)
    GEQ             reduce using rule 96 (additive_expression -> multiplicative_expression .)
    EQEQ            reduce using rule 96 (additive_expression -> multiplicative_expression .)
    NEQ             reduce using rule 96 (additive_expression -> multiplicative_expression .)
    AND             reduce using rule 96 (additive_expression -> multiplicative_expression .)
    OR              reduce using rule 96 (additive_expression -> multiplicative_expression .)
    BACKSLASH       reduce using rule 96 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 96 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 96 (additive_expression -> multiplicative_expression .)
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113


state 67

    (165) primary_expression -> MINUS . INT_LITERAL
    (166) primary_expression -> MINUS . FLOAT_LITERAL

    INT_LITERAL     shift and go to state 114
    FLOAT_LITERAL   shift and go to state 115


state 68

    (108) multiplicative_expression -> unary_expression .

    TIMES           reduce using rule 108 (multiplicative_expression -> unary_expression .)
    DIVIDE          reduce using rule 108 (multiplicative_expression -> unary_expression .)
    PLUS            reduce using rule 108 (multiplicative_expression -> unary_expression .)
    MINUS           reduce using rule 108 (multiplicative_expression -> unary_expression .)
    LESS            reduce using rule 108 (multiplicative_expression -> unary_expression .)
    GREATER         reduce using rule 108 (multiplicative_expression -> unary_expression .)
    LEQ             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    GEQ             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    EQEQ            reduce using rule 108 (multiplicative_expression -> unary_expression .)
    NEQ             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    AND             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    OR              reduce using rule 108 (multiplicative_expression -> unary_expression .)
    BACKSLASH       reduce using rule 108 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 108 (multiplicative_expression -> unary_expression .)
    COMMA           reduce using rule 108 (multiplicative_expression -> unary_expression .)


state 69

    (116) unary_expression -> NOT . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    unary_expression               shift and go to state 116
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 70

    (120) unary_expression -> AWAIT . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    unary_expression               shift and go to state 118
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 71

    (123) unary_expression -> postfix_expression .
    (144) postfix_expression -> postfix_expression . DOT IDENTIFIER
    (146) postfix_expression -> postfix_expression . LPAREN argument_list RPAREN

    TIMES           reduce using rule 123 (unary_expression -> postfix_expression .)
    DIVIDE          reduce using rule 123 (unary_expression -> postfix_expression .)
    PLUS            reduce using rule 123 (unary_expression -> postfix_expression .)
    MINUS           reduce using rule 123 (unary_expression -> postfix_expression .)
    LESS            reduce using rule 123 (unary_expression -> postfix_expression .)
    GREATER         reduce using rule 123 (unary_expression -> postfix_expression .)
    LEQ             reduce using rule 123 (unary_expression -> postfix_expression .)
    GEQ             reduce using rule 123 (unary_expression -> postfix_expression .)
    EQEQ            reduce using rule 123 (unary_expression -> postfix_expression .)
    NEQ             reduce using rule 123 (unary_expression -> postfix_expression .)
    AND             reduce using rule 123 (unary_expression -> postfix_expression .)
    OR              reduce using rule 123 (unary_expression -> postfix_expression .)
    BACKSLASH       reduce using rule 123 (unary_expression -> postfix_expression .)
    RPAREN          reduce using rule 123 (unary_expression -> postfix_expression .)
    COMMA           reduce using rule 123 (unary_expression -> postfix_expression .)
    DOT             shift and go to state 119
    LPAREN          shift and go to state 120


state 72

    (149) postfix_expression -> primary_expression .

    DOT             reduce using rule 149 (postfix_expression -> primary_expression .)
    LPAREN          reduce using rule 149 (postfix_expression -> primary_expression .)
    TIMES           reduce using rule 149 (postfix_expression -> primary_expression .)
    DIVIDE          reduce using rule 149 (postfix_expression -> primary_expression .)
    PLUS            reduce using rule 149 (postfix_expression -> primary_expression .)
    MINUS           reduce using rule 149 (postfix_expression -> primary_expression .)
    LESS            reduce using rule 149 (postfix_expression -> primary_expression .)
    GREATER         reduce using rule 149 (postfix_expression -> primary_expression .)
    LEQ             reduce using rule 149 (postfix_expression -> primary_expression .)
    GEQ             reduce using rule 149 (postfix_expression -> primary_expression .)
    EQEQ            reduce using rule 149 (postfix_expression -> primary_expression .)
    NEQ             reduce using rule 149 (postfix_expression -> primary_expression .)
    AND             reduce using rule 149 (postfix_expression -> primary_expression .)
    OR              reduce using rule 149 (postfix_expression -> primary_expression .)
    BACKSLASH       reduce using rule 149 (postfix_expression -> primary_expression .)
    RPAREN          reduce using rule 149 (postfix_expression -> primary_expression .)
    COMMA           reduce using rule 149 (postfix_expression -> primary_expression .)


state 73

    (151) primary_expression -> INT_LITERAL .

    DOT             reduce using rule 151 (primary_expression -> INT_LITERAL .)
    LPAREN          reduce using rule 151 (primary_expression -> INT_LITERAL .)
    TIMES           reduce using rule 151 (primary_expression -> INT_LITERAL .)
    DIVIDE          reduce using rule 151 (primary_expression -> INT_LITERAL .)
    PLUS            reduce using rule 151 (primary_expression -> INT_LITERAL .)
    MINUS           reduce using rule 151 (primary_expression -> INT_LITERAL .)
    LESS            reduce using rule 151 (primary_expression -> INT_LITERAL .)
    GREATER         reduce using rule 151 (primary_expression -> INT_LITERAL .)
    LEQ             reduce using rule 151 (primary_expression -> INT_LITERAL .)
    GEQ             reduce using rule 151 (primary_expression -> INT_LITERAL .)
    EQEQ            reduce using rule 151 (primary_expression -> INT_LITERAL .)
    NEQ             reduce using rule 151 (primary_expression -> INT_LITERAL .)
    AND             reduce using rule 151 (primary_expression -> INT_LITERAL .)
    OR              reduce using rule 151 (primary_expression -> INT_LITERAL .)
    BACKSLASH       reduce using rule 151 (primary_expression -> INT_LITERAL .)
    RPAREN          reduce using rule 151 (primary_expression -> INT_LITERAL .)
    COMMA           reduce using rule 151 (primary_expression -> INT_LITERAL .)


state 74

    (152) primary_expression -> FLOAT_LITERAL .

    DOT             reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    LPAREN          reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    TIMES           reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    DIVIDE          reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    PLUS            reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    MINUS           reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    LESS            reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    GREATER         reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    LEQ             reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    GEQ             reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    EQEQ            reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    NEQ             reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    AND             reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    OR              reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    BACKSLASH       reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    RPAREN          reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)
    COMMA           reduce using rule 152 (primary_expression -> FLOAT_LITERAL .)


state 75

    (154) primary_expression -> BOOL_LITERAL .

    DOT             reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    LPAREN          reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    TIMES           reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    DIVIDE          reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    PLUS            reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    MINUS           reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    LESS            reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    GREATER         reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    LEQ             reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    GEQ             reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    EQEQ            reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    NEQ             reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    AND             reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    OR              reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    BACKSLASH       reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    RPAREN          reduce using rule 154 (primary_expression -> BOOL_LITERAL .)
    COMMA           reduce using rule 154 (primary_expression -> BOOL_LITERAL .)


state 76

    (89) program -> item_list BACKSLASH .

    $end            reduce using rule 89 (program -> item_list BACKSLASH .)


state 77

    (97) item_list -> item_list item .

    BACKSLASH       reduce using rule 97 (item_list -> item_list item .)
    HASH            reduce using rule 97 (item_list -> item_list item .)
    DEFINE          reduce using rule 97 (item_list -> item_list item .)
    CONST           reduce using rule 97 (item_list -> item_list item .)
    SHOW            reduce using rule 97 (item_list -> item_list item .)
    SAVE            reduce using rule 97 (item_list -> item_list item .)
    DELETE          reduce using rule 97 (item_list -> item_list item .)
    RETURN          reduce using rule 97 (item_list -> item_list item .)
    THROW           reduce using rule 97 (item_list -> item_list item .)
    CONNECT         reduce using rule 97 (item_list -> item_list item .)
    QUERY           reduce using rule 97 (item_list -> item_list item .)
    CLASS           reduce using rule 97 (item_list -> item_list item .)
    IF              reduce using rule 97 (item_list -> item_list item .)
    WHILE           reduce using rule 97 (item_list -> item_list item .)
    FOR             reduce using rule 97 (item_list -> item_list item .)
    TRY             reduce using rule 97 (item_list -> item_list item .)
    TRANSACTION     reduce using rule 97 (item_list -> item_list item .)
    APPLY           reduce using rule 97 (item_list -> item_list item .)
    ASYNC           reduce using rule 97 (item_list -> item_list item .)
    FUNCTION        reduce using rule 97 (item_list -> item_list item .)
    IDENTIFIER      reduce using rule 97 (item_list -> item_list item .)
    NOT             reduce using rule 97 (item_list -> item_list item .)
    AWAIT           reduce using rule 97 (item_list -> item_list item .)
    INT_LITERAL     reduce using rule 97 (item_list -> item_list item .)
    FLOAT_LITERAL   reduce using rule 97 (item_list -> item_list item .)
    STRING_LITERAL  reduce using rule 97 (item_list -> item_list item .)
    BOOL_LITERAL    reduce using rule 97 (item_list -> item_list item .)
    LPAREN          reduce using rule 97 (item_list -> item_list item .)
    MINUS           reduce using rule 97 (item_list -> item_list item .)
    $end            reduce using rule 97 (item_list -> item_list item .)


state 78

    (104) item -> statement BACKSLASH .

    BACKSLASH       reduce using rule 104 (item -> statement BACKSLASH .)
    HASH            reduce using rule 104 (item -> statement BACKSLASH .)
    DEFINE          reduce using rule 104 (item -> statement BACKSLASH .)
    CONST           reduce using rule 104 (item -> statement BACKSLASH .)
    SHOW            reduce using rule 104 (item -> statement BACKSLASH .)
    SAVE            reduce using rule 104 (item -> statement BACKSLASH .)
    DELETE          reduce using rule 104 (item -> statement BACKSLASH .)
    RETURN          reduce using rule 104 (item -> statement BACKSLASH .)
    THROW           reduce using rule 104 (item -> statement BACKSLASH .)
    CONNECT         reduce using rule 104 (item -> statement BACKSLASH .)
    QUERY           reduce using rule 104 (item -> statement BACKSLASH .)
    CLASS           reduce using rule 104 (item -> statement BACKSLASH .)
    IF              reduce using rule 104 (item -> statement BACKSLASH .)
    WHILE           reduce using rule 104 (item -> statement BACKSLASH .)
    FOR             reduce using rule 104 (item -> statement BACKSLASH .)
    TRY             reduce using rule 104 (item -> statement BACKSLASH .)
    TRANSACTION     reduce using rule 104 (item -> statement BACKSLASH .)
    APPLY           reduce using rule 104 (item -> statement BACKSLASH .)
    ASYNC           reduce using rule 104 (item -> statement BACKSLASH .)
    FUNCTION        reduce using rule 104 (item -> statement BACKSLASH .)
    IDENTIFIER      reduce using rule 104 (item -> statement BACKSLASH .)
    NOT             reduce using rule 104 (item -> statement BACKSLASH .)
    AWAIT           reduce using rule 104 (item -> statement BACKSLASH .)
    INT_LITERAL     reduce using rule 104 (item -> statement BACKSLASH .)
    FLOAT_LITERAL   reduce using rule 104 (item -> statement BACKSLASH .)
    STRING_LITERAL  reduce using rule 104 (item -> statement BACKSLASH .)
    BOOL_LITERAL    reduce using rule 104 (item -> statement BACKSLASH .)
    LPAREN          reduce using rule 104 (item -> statement BACKSLASH .)
    MINUS           reduce using rule 104 (item -> statement BACKSLASH .)
    $end            reduce using rule 104 (item -> statement BACKSLASH .)


state 79

    (157) jtml_element -> HASH IDENTIFIER . jtml_body closing_tag
    (3) jtml_body -> . jtml_attributes BACKSLASH jtml_content_item_list
    (4) jtml_body -> . jtml_attributes
    (5) jtml_body -> . jtml_content_item_list
    (6) jtml_body -> . jtml_empty
    (63) jtml_attributes -> . jtml_attributes attribute
    (64) jtml_attributes -> . attribute
    (91) jtml_content_item_list -> . jtml_content_item_list jtml_content_item
    (92) jtml_content_item_list -> . jtml_content_item
    (117) jtml_empty -> .
    (70) attribute -> . IDENTIFIER COLON STRING_LITERAL
    (100) jtml_content_item -> . statement BACKSLASH
    (101) jtml_content_item -> . expression BACKSLASH
    (102) jtml_content_item -> . dynamic_content BACKSLASH
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (16) expression -> . assignment_expression
    (109) dynamic_content -> . HASH LPAREN IDENTIFIER RPAREN
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

  ! shift/reduce conflict for HASH resolved as shift
    IDENTIFIER      shift and go to state 122
    HASH            shift and go to state 121
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

  ! HASH            [ reduce using rule 117 (jtml_empty -> .) ]

    jtml_body                      shift and go to state 123
    jtml_attributes                shift and go to state 124
    jtml_content_item_list         shift and go to state 125
    jtml_empty                     shift and go to state 126
    attribute                      shift and go to state 127
    jtml_content_item              shift and go to state 128
    statement                      shift and go to state 129
    expression                     shift and go to state 130
    dynamic_content                shift and go to state 131
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    assignment_expression          shift and go to state 58
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 80

    (29) assignment_expression -> IDENTIFIER PLUSEQ . expression
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 132
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 81

    (36) assignment_expression -> IDENTIFIER EQUALS . expression
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 133
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 82

    (14) variable_declaration -> DEFINE IDENTIFIER . COLON type EQUALS expression
    (31) variable_declaration -> DEFINE IDENTIFIER . EQUALS expression
    (39) crypto_generate_key_expr -> DEFINE IDENTIFIER . EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> DEFINE IDENTIFIER . EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER . EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER . EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> DEFINE IDENTIFIER . EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> DEFINE IDENTIFIER . EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> DEFINE IDENTIFIER . EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> DEFINE IDENTIFIER . AS QUBIT
    (46) quantum_measure_expr -> DEFINE IDENTIFIER . EQUALS MEASURE IDENTIFIER

    COLON           shift and go to state 134
    EQUALS          shift and go to state 135
    AS              shift and go to state 136


state 83

    (43) const_declaration -> CONST IDENTIFIER . COLON type EQUALS expression
    (53) const_declaration -> CONST IDENTIFIER . EQUALS expression

    COLON           shift and go to state 137
    EQUALS          shift and go to state 138


state 84

    (27) show_statement -> SHOW expression .

    BACKSLASH       reduce using rule 27 (show_statement -> SHOW expression .)


state 85

    (34) save_statement -> SAVE IDENTIFIER . EQUALS expression

    EQUALS          shift and go to state 139


state 86

    (42) delete_statement -> DELETE IDENTIFIER .

    BACKSLASH       reduce using rule 42 (delete_statement -> DELETE IDENTIFIER .)


state 87

    (54) return_statement -> RETURN expression .

    BACKSLASH       reduce using rule 54 (return_statement -> RETURN expression .)


state 88

    (47) throw_statement -> THROW expression .

    BACKSLASH       reduce using rule 47 (throw_statement -> THROW expression .)


state 89

    (7) connect_statement -> CONNECT TO . STRING_LITERAL AS IDENTIFIER

    STRING_LITERAL  shift and go to state 140


state 90

    (26) query_statement -> QUERY ON . IDENTIFIER COLON STRING_LITERAL

    IDENTIFIER      shift and go to state 141


state 91

    (17) function_declaration -> function_head BACKSLASH . function_body
    (55) function_body -> . statement_list
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    function_head                  shift and go to state 49
    function_body                  shift and go to state 142
    statement_list                 shift and go to state 143
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 92

    (99) class_declaration -> CLASS IDENTIFIER . BACKSLASH statement_list_opt

    BACKSLASH       shift and go to state 145


state 93

    (1) if_statement -> IF LPAREN . expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> IF LPAREN . expression RPAREN BACKSLASH statement_list_opt
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 146
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 94

    (161) primary_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 147


state 95

    (28) while_statement -> WHILE LPAREN . expression RPAREN BACKSLASH statement_list_opt
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 148
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 96

    (35) for_statement -> FOR LPAREN . IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt

    IDENTIFIER      shift and go to state 149


state 97

    (2) try_catch_finally -> TRY BACKSLASH . statement_list_opt
    (25) try_catch_finally -> TRY BACKSLASH . statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> TRY BACKSLASH . statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> TRY BACKSLASH . statement_list_opt FINALLY BACKSLASH statement_list_opt
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    CATCH           reduce using rule 87 (empty -> .)
    FINALLY         reduce using rule 87 (empty -> .)
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    statement_list_opt             shift and go to state 150
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 98

    (33) transaction_block -> TRANSACTION ON . IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH

    IDENTIFIER      shift and go to state 154


state 99

    (37) quantum_apply -> APPLY IDENTIFIER . ON identifier_list

    ON              shift and go to state 155


state 100

    (45) function_head -> ASYNC FUNCTION . IDENTIFIER parameter_list function_return_type

    IDENTIFIER      shift and go to state 156


state 101

    (52) function_head -> FUNCTION IDENTIFIER . parameter_list function_return_type
    (145) parameter_list -> . LPAREN parameters_opt RPAREN

    LPAREN          shift and go to state 158

    parameter_list                 shift and go to state 157

state 102

    (50) logical_or_expression -> logical_or_expression OR . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    logical_and_expression         shift and go to state 159
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 103

    (58) logical_and_expression -> logical_and_expression AND . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    equality_expression            shift and go to state 160
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 104

    (66) equality_expression -> equality_expression EQEQ . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    relational_expression          shift and go to state 161
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 105

    (67) equality_expression -> equality_expression NEQ . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    relational_expression          shift and go to state 162
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 106

    (75) relational_expression -> relational_expression LESS . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    additive_expression            shift and go to state 163
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 107

    (76) relational_expression -> relational_expression GREATER . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    additive_expression            shift and go to state 164
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 108

    (77) relational_expression -> relational_expression LEQ . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    additive_expression            shift and go to state 165
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 109

    (78) relational_expression -> relational_expression GEQ . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    additive_expression            shift and go to state 166
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 110

    (94) additive_expression -> additive_expression PLUS . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    multiplicative_expression      shift and go to state 167
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 111

    (95) additive_expression -> additive_expression MINUS . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    multiplicative_expression      shift and go to state 168
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 112

    (106) multiplicative_expression -> multiplicative_expression TIMES . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    unary_expression               shift and go to state 169
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 113

    (107) multiplicative_expression -> multiplicative_expression DIVIDE . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    IDENTIFIER      shift and go to state 117
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    unary_expression               shift and go to state 170
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 114

    (165) primary_expression -> MINUS INT_LITERAL .

    DOT             reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    LPAREN          reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    TIMES           reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    DIVIDE          reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    PLUS            reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    MINUS           reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    LESS            reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    GREATER         reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    LEQ             reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    GEQ             reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    EQEQ            reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    NEQ             reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    AND             reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    OR              reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    BACKSLASH       reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    RPAREN          reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)
    COMMA           reduce using rule 165 (primary_expression -> MINUS INT_LITERAL .)


state 115

    (166) primary_expression -> MINUS FLOAT_LITERAL .

    DOT             reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    LPAREN          reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    TIMES           reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    DIVIDE          reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    PLUS            reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    MINUS           reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    LESS            reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    GREATER         reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    LEQ             reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    GEQ             reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    EQEQ            reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    NEQ             reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    AND             reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    OR              reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    BACKSLASH       reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    RPAREN          reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)
    COMMA           reduce using rule 166 (primary_expression -> MINUS FLOAT_LITERAL .)


state 116

    (116) unary_expression -> NOT unary_expression .

    TIMES           reduce using rule 116 (unary_expression -> NOT unary_expression .)
    DIVIDE          reduce using rule 116 (unary_expression -> NOT unary_expression .)
    PLUS            reduce using rule 116 (unary_expression -> NOT unary_expression .)
    MINUS           reduce using rule 116 (unary_expression -> NOT unary_expression .)
    LESS            reduce using rule 116 (unary_expression -> NOT unary_expression .)
    GREATER         reduce using rule 116 (unary_expression -> NOT unary_expression .)
    LEQ             reduce using rule 116 (unary_expression -> NOT unary_expression .)
    GEQ             reduce using rule 116 (unary_expression -> NOT unary_expression .)
    EQEQ            reduce using rule 116 (unary_expression -> NOT unary_expression .)
    NEQ             reduce using rule 116 (unary_expression -> NOT unary_expression .)
    AND             reduce using rule 116 (unary_expression -> NOT unary_expression .)
    OR              reduce using rule 116 (unary_expression -> NOT unary_expression .)
    BACKSLASH       reduce using rule 116 (unary_expression -> NOT unary_expression .)
    RPAREN          reduce using rule 116 (unary_expression -> NOT unary_expression .)
    COMMA           reduce using rule 116 (unary_expression -> NOT unary_expression .)


state 117

    (159) primary_expression -> IDENTIFIER .

    DOT             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    LPAREN          reduce using rule 159 (primary_expression -> IDENTIFIER .)
    TIMES           reduce using rule 159 (primary_expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 159 (primary_expression -> IDENTIFIER .)
    PLUS            reduce using rule 159 (primary_expression -> IDENTIFIER .)
    MINUS           reduce using rule 159 (primary_expression -> IDENTIFIER .)
    LESS            reduce using rule 159 (primary_expression -> IDENTIFIER .)
    GREATER         reduce using rule 159 (primary_expression -> IDENTIFIER .)
    LEQ             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    GEQ             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    EQEQ            reduce using rule 159 (primary_expression -> IDENTIFIER .)
    NEQ             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    AND             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    OR              reduce using rule 159 (primary_expression -> IDENTIFIER .)
    BACKSLASH       reduce using rule 159 (primary_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 159 (primary_expression -> IDENTIFIER .)
    COMMA           reduce using rule 159 (primary_expression -> IDENTIFIER .)


state 118

    (120) unary_expression -> AWAIT unary_expression .

    TIMES           reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    DIVIDE          reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    PLUS            reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    MINUS           reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    LESS            reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    GREATER         reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    LEQ             reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    GEQ             reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    EQEQ            reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    NEQ             reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    AND             reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    OR              reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    BACKSLASH       reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    RPAREN          reduce using rule 120 (unary_expression -> AWAIT unary_expression .)
    COMMA           reduce using rule 120 (unary_expression -> AWAIT unary_expression .)


state 119

    (144) postfix_expression -> postfix_expression DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 171


state 120

    (146) postfix_expression -> postfix_expression LPAREN . argument_list RPAREN
    (162) argument_list -> . expression
    (163) argument_list -> . argument_list COMMA expression
    (164) argument_list -> . empty
    (16) expression -> . assignment_expression
    (87) empty -> .
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    RPAREN          reduce using rule 87 (empty -> .)
    COMMA           reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    postfix_expression             shift and go to state 71
    argument_list                  shift and go to state 172
    expression                     shift and go to state 173
    empty                          shift and go to state 174
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    primary_expression             shift and go to state 72

state 121

    (109) dynamic_content -> HASH . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 175


state 122

    (70) attribute -> IDENTIFIER . COLON STRING_LITERAL
    (29) assignment_expression -> IDENTIFIER . PLUSEQ expression
    (36) assignment_expression -> IDENTIFIER . EQUALS expression
    (159) primary_expression -> IDENTIFIER .

    COLON           shift and go to state 176
    PLUSEQ          shift and go to state 80
    EQUALS          shift and go to state 81
    DOT             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    LPAREN          reduce using rule 159 (primary_expression -> IDENTIFIER .)
    TIMES           reduce using rule 159 (primary_expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 159 (primary_expression -> IDENTIFIER .)
    PLUS            reduce using rule 159 (primary_expression -> IDENTIFIER .)
    MINUS           reduce using rule 159 (primary_expression -> IDENTIFIER .)
    LESS            reduce using rule 159 (primary_expression -> IDENTIFIER .)
    GREATER         reduce using rule 159 (primary_expression -> IDENTIFIER .)
    LEQ             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    GEQ             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    EQEQ            reduce using rule 159 (primary_expression -> IDENTIFIER .)
    NEQ             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    AND             reduce using rule 159 (primary_expression -> IDENTIFIER .)
    OR              reduce using rule 159 (primary_expression -> IDENTIFIER .)
    BACKSLASH       reduce using rule 159 (primary_expression -> IDENTIFIER .)


state 123

    (157) jtml_element -> HASH IDENTIFIER jtml_body . closing_tag
    (72) closing_tag -> . HASH
    (73) closing_tag -> . HASH IDENTIFIER

    HASH            shift and go to state 177

    closing_tag                    shift and go to state 178

state 124

    (3) jtml_body -> jtml_attributes . BACKSLASH jtml_content_item_list
    (4) jtml_body -> jtml_attributes .
    (63) jtml_attributes -> jtml_attributes . attribute
    (70) attribute -> . IDENTIFIER COLON STRING_LITERAL

    BACKSLASH       shift and go to state 179
    HASH            reduce using rule 4 (jtml_body -> jtml_attributes .)
    IDENTIFIER      shift and go to state 181

    attribute                      shift and go to state 180

state 125

    (5) jtml_body -> jtml_content_item_list .
    (91) jtml_content_item_list -> jtml_content_item_list . jtml_content_item
    (100) jtml_content_item -> . statement BACKSLASH
    (101) jtml_content_item -> . expression BACKSLASH
    (102) jtml_content_item -> . dynamic_content BACKSLASH
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (16) expression -> . assignment_expression
    (109) dynamic_content -> . HASH LPAREN IDENTIFIER RPAREN
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

  ! shift/reduce conflict for HASH resolved as shift
    HASH            shift and go to state 121
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    IDENTIFIER      shift and go to state 27
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

  ! HASH            [ reduce using rule 5 (jtml_body -> jtml_content_item_list .) ]

    jtml_content_item              shift and go to state 182
    statement                      shift and go to state 129
    expression                     shift and go to state 130
    dynamic_content                shift and go to state 131
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    assignment_expression          shift and go to state 58
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 126

    (6) jtml_body -> jtml_empty .

    HASH            reduce using rule 6 (jtml_body -> jtml_empty .)


state 127

    (64) jtml_attributes -> attribute .

    BACKSLASH       reduce using rule 64 (jtml_attributes -> attribute .)
    IDENTIFIER      reduce using rule 64 (jtml_attributes -> attribute .)
    HASH            reduce using rule 64 (jtml_attributes -> attribute .)


state 128

    (92) jtml_content_item_list -> jtml_content_item .

    HASH            reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    DEFINE          reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    CONST           reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    SHOW            reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    SAVE            reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    DELETE          reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    RETURN          reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    THROW           reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    CONNECT         reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    QUERY           reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    CLASS           reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    IF              reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    WHILE           reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    FOR             reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    TRY             reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    TRANSACTION     reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    IDENTIFIER      reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    APPLY           reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    ASYNC           reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    FUNCTION        reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    NOT             reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    AWAIT           reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    INT_LITERAL     reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    FLOAT_LITERAL   reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    STRING_LITERAL  reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    BOOL_LITERAL    reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    LPAREN          reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)
    MINUS           reduce using rule 92 (jtml_content_item_list -> jtml_content_item .)


state 129

    (100) jtml_content_item -> statement . BACKSLASH

    BACKSLASH       shift and go to state 183


state 130

    (101) jtml_content_item -> expression . BACKSLASH
    (11) expression_statement -> expression .

  ! shift/reduce conflict for BACKSLASH resolved as shift
    BACKSLASH       shift and go to state 184

  ! BACKSLASH       [ reduce using rule 11 (expression_statement -> expression .) ]


state 131

    (102) jtml_content_item -> dynamic_content . BACKSLASH

    BACKSLASH       shift and go to state 185


state 132

    (29) assignment_expression -> IDENTIFIER PLUSEQ expression .

    BACKSLASH       reduce using rule 29 (assignment_expression -> IDENTIFIER PLUSEQ expression .)
    RPAREN          reduce using rule 29 (assignment_expression -> IDENTIFIER PLUSEQ expression .)
    COMMA           reduce using rule 29 (assignment_expression -> IDENTIFIER PLUSEQ expression .)


state 133

    (36) assignment_expression -> IDENTIFIER EQUALS expression .

    BACKSLASH       reduce using rule 36 (assignment_expression -> IDENTIFIER EQUALS expression .)
    RPAREN          reduce using rule 36 (assignment_expression -> IDENTIFIER EQUALS expression .)
    COMMA           reduce using rule 36 (assignment_expression -> IDENTIFIER EQUALS expression .)


state 134

    (14) variable_declaration -> DEFINE IDENTIFIER COLON . type EQUALS expression
    (12) type -> . type_name
    (13) type -> . type_name generic_arguments
    (48) type_name -> . IDENTIFIER
    (49) type_name -> . TYPE

    IDENTIFIER      shift and go to state 186
    TYPE            shift and go to state 189

    type                           shift and go to state 187
    type_name                      shift and go to state 188

state 135

    (31) variable_declaration -> DEFINE IDENTIFIER EQUALS . expression
    (39) crypto_generate_key_expr -> DEFINE IDENTIFIER EQUALS . GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> DEFINE IDENTIFIER EQUALS . DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS . ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS . DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> DEFINE IDENTIFIER EQUALS . HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS . SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS . VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (46) quantum_measure_expr -> DEFINE IDENTIFIER EQUALS . MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    GENERATE_KEY    shift and go to state 191
    DERIVE_PUBLIC_KEY shift and go to state 192
    ENCRYPT         shift and go to state 193
    DECRYPT         shift and go to state 194
    HASH            shift and go to state 195
    SIGN            shift and go to state 196
    VERIFY          shift and go to state 197
    MEASURE         shift and go to state 198
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 190
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 136

    (30) quantum_define_qubit -> DEFINE IDENTIFIER AS . QUBIT

    QUBIT           shift and go to state 199


state 137

    (43) const_declaration -> CONST IDENTIFIER COLON . type EQUALS expression
    (12) type -> . type_name
    (13) type -> . type_name generic_arguments
    (48) type_name -> . IDENTIFIER
    (49) type_name -> . TYPE

    IDENTIFIER      shift and go to state 186
    TYPE            shift and go to state 189

    type                           shift and go to state 200
    type_name                      shift and go to state 188

state 138

    (53) const_declaration -> CONST IDENTIFIER EQUALS . expression
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 201
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 139

    (34) save_statement -> SAVE IDENTIFIER EQUALS . expression
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 202
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 140

    (7) connect_statement -> CONNECT TO STRING_LITERAL . AS IDENTIFIER

    AS              shift and go to state 203


state 141

    (26) query_statement -> QUERY ON IDENTIFIER . COLON STRING_LITERAL

    COLON           shift and go to state 204


state 142

    (17) function_declaration -> function_head BACKSLASH function_body .

    BACKSLASH       reduce using rule 17 (function_declaration -> function_head BACKSLASH function_body .)


state 143

    (55) function_body -> statement_list .

    BACKSLASH       reduce using rule 55 (function_body -> statement_list .)


state 144

    (119) statement_list -> statement . BACKSLASH
    (122) statement_list -> statement . BACKSLASH statement_list

    BACKSLASH       shift and go to state 205


state 145

    (99) class_declaration -> CLASS IDENTIFIER BACKSLASH . statement_list_opt
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    statement_list_opt             shift and go to state 206
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 146

    (1) if_statement -> IF LPAREN expression . RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> IF LPAREN expression . RPAREN BACKSLASH statement_list_opt

    RPAREN          shift and go to state 207


state 147

    (161) primary_expression -> LPAREN expression RPAREN .

    DOT             reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    BACKSLASH       reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 161 (primary_expression -> LPAREN expression RPAREN .)


state 148

    (28) while_statement -> WHILE LPAREN expression . RPAREN BACKSLASH statement_list_opt

    RPAREN          shift and go to state 208


state 149

    (35) for_statement -> FOR LPAREN IDENTIFIER . IN expression RPAREN BACKSLASH statement_list_opt

    IN              shift and go to state 209


state 150

    (2) try_catch_finally -> TRY BACKSLASH statement_list_opt .
    (25) try_catch_finally -> TRY BACKSLASH statement_list_opt . CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt . CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> TRY BACKSLASH statement_list_opt . FINALLY BACKSLASH statement_list_opt

    BACKSLASH       reduce using rule 2 (try_catch_finally -> TRY BACKSLASH statement_list_opt .)
    CATCH           shift and go to state 210
    FINALLY         shift and go to state 211


state 151

    (110) statement_list_opt -> statement_list .

    CATCH           reduce using rule 110 (statement_list_opt -> statement_list .)
    FINALLY         reduce using rule 110 (statement_list_opt -> statement_list .)
    BACKSLASH       reduce using rule 110 (statement_list_opt -> statement_list .)
    ELSE            reduce using rule 110 (statement_list_opt -> statement_list .)


state 152

    (111) statement_list_opt -> jtml_element .

    CATCH           reduce using rule 111 (statement_list_opt -> jtml_element .)
    FINALLY         reduce using rule 111 (statement_list_opt -> jtml_element .)
    BACKSLASH       reduce using rule 111 (statement_list_opt -> jtml_element .)
    ELSE            reduce using rule 111 (statement_list_opt -> jtml_element .)


state 153

    (112) statement_list_opt -> empty .

    CATCH           reduce using rule 112 (statement_list_opt -> empty .)
    FINALLY         reduce using rule 112 (statement_list_opt -> empty .)
    BACKSLASH       reduce using rule 112 (statement_list_opt -> empty .)
    ELSE            reduce using rule 112 (statement_list_opt -> empty .)


state 154

    (33) transaction_block -> TRANSACTION ON IDENTIFIER . BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH

    BACKSLASH       shift and go to state 212


state 155

    (37) quantum_apply -> APPLY IDENTIFIER ON . identifier_list
    (167) identifier_list -> . IDENTIFIER
    (168) identifier_list -> . identifier_list COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 213

    identifier_list                shift and go to state 214

state 156

    (45) function_head -> ASYNC FUNCTION IDENTIFIER . parameter_list function_return_type
    (145) parameter_list -> . LPAREN parameters_opt RPAREN

    LPAREN          shift and go to state 158

    parameter_list                 shift and go to state 215

state 157

    (52) function_head -> FUNCTION IDENTIFIER parameter_list . function_return_type
    (158) function_return_type -> . COLON type
    (160) function_return_type -> . empty
    (87) empty -> .

    COLON           shift and go to state 217
    BACKSLASH       reduce using rule 87 (empty -> .)

    function_return_type           shift and go to state 216
    empty                          shift and go to state 218

state 158

    (145) parameter_list -> LPAREN . parameters_opt RPAREN
    (147) parameters_opt -> . parameters
    (148) parameters_opt -> . empty
    (150) parameters -> . parameters COMMA parameter
    (155) parameters -> . parameter
    (87) empty -> .
    (156) parameter -> . IDENTIFIER COLON type

    RPAREN          reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 223

    parameters_opt                 shift and go to state 219
    parameters                     shift and go to state 220
    empty                          shift and go to state 221
    parameter                      shift and go to state 222

state 159

    (50) logical_or_expression -> logical_or_expression OR logical_and_expression .
    (58) logical_and_expression -> logical_and_expression . AND equality_expression

    OR              reduce using rule 50 (logical_or_expression -> logical_or_expression OR logical_and_expression .)
    BACKSLASH       reduce using rule 50 (logical_or_expression -> logical_or_expression OR logical_and_expression .)
    RPAREN          reduce using rule 50 (logical_or_expression -> logical_or_expression OR logical_and_expression .)
    COMMA           reduce using rule 50 (logical_or_expression -> logical_or_expression OR logical_and_expression .)
    AND             shift and go to state 103


state 160

    (58) logical_and_expression -> logical_and_expression AND equality_expression .
    (66) equality_expression -> equality_expression . EQEQ relational_expression
    (67) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 58 (logical_and_expression -> logical_and_expression AND equality_expression .)
    OR              reduce using rule 58 (logical_and_expression -> logical_and_expression AND equality_expression .)
    BACKSLASH       reduce using rule 58 (logical_and_expression -> logical_and_expression AND equality_expression .)
    RPAREN          reduce using rule 58 (logical_and_expression -> logical_and_expression AND equality_expression .)
    COMMA           reduce using rule 58 (logical_and_expression -> logical_and_expression AND equality_expression .)
    EQEQ            shift and go to state 104
    NEQ             shift and go to state 105


state 161

    (66) equality_expression -> equality_expression EQEQ relational_expression .
    (75) relational_expression -> relational_expression . LESS additive_expression
    (76) relational_expression -> relational_expression . GREATER additive_expression
    (77) relational_expression -> relational_expression . LEQ additive_expression
    (78) relational_expression -> relational_expression . GEQ additive_expression

    EQEQ            reduce using rule 66 (equality_expression -> equality_expression EQEQ relational_expression .)
    NEQ             reduce using rule 66 (equality_expression -> equality_expression EQEQ relational_expression .)
    AND             reduce using rule 66 (equality_expression -> equality_expression EQEQ relational_expression .)
    OR              reduce using rule 66 (equality_expression -> equality_expression EQEQ relational_expression .)
    BACKSLASH       reduce using rule 66 (equality_expression -> equality_expression EQEQ relational_expression .)
    RPAREN          reduce using rule 66 (equality_expression -> equality_expression EQEQ relational_expression .)
    COMMA           reduce using rule 66 (equality_expression -> equality_expression EQEQ relational_expression .)
    LESS            shift and go to state 106
    GREATER         shift and go to state 107
    LEQ             shift and go to state 108
    GEQ             shift and go to state 109


state 162

    (67) equality_expression -> equality_expression NEQ relational_expression .
    (75) relational_expression -> relational_expression . LESS additive_expression
    (76) relational_expression -> relational_expression . GREATER additive_expression
    (77) relational_expression -> relational_expression . LEQ additive_expression
    (78) relational_expression -> relational_expression . GEQ additive_expression

    EQEQ            reduce using rule 67 (equality_expression -> equality_expression NEQ relational_expression .)
    NEQ             reduce using rule 67 (equality_expression -> equality_expression NEQ relational_expression .)
    AND             reduce using rule 67 (equality_expression -> equality_expression NEQ relational_expression .)
    OR              reduce using rule 67 (equality_expression -> equality_expression NEQ relational_expression .)
    BACKSLASH       reduce using rule 67 (equality_expression -> equality_expression NEQ relational_expression .)
    RPAREN          reduce using rule 67 (equality_expression -> equality_expression NEQ relational_expression .)
    COMMA           reduce using rule 67 (equality_expression -> equality_expression NEQ relational_expression .)
    LESS            shift and go to state 106
    GREATER         shift and go to state 107
    LEQ             shift and go to state 108
    GEQ             shift and go to state 109


state 163

    (75) relational_expression -> relational_expression LESS additive_expression .
    (94) additive_expression -> additive_expression . PLUS multiplicative_expression
    (95) additive_expression -> additive_expression . MINUS multiplicative_expression

    LESS            reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    GREATER         reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    LEQ             reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    GEQ             reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    EQEQ            reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    NEQ             reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    AND             reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    OR              reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    BACKSLASH       reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    RPAREN          reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    COMMA           reduce using rule 75 (relational_expression -> relational_expression LESS additive_expression .)
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 164

    (76) relational_expression -> relational_expression GREATER additive_expression .
    (94) additive_expression -> additive_expression . PLUS multiplicative_expression
    (95) additive_expression -> additive_expression . MINUS multiplicative_expression

    LESS            reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    GREATER         reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    LEQ             reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    GEQ             reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    EQEQ            reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    NEQ             reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    AND             reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    OR              reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    BACKSLASH       reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    RPAREN          reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    COMMA           reduce using rule 76 (relational_expression -> relational_expression GREATER additive_expression .)
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 165

    (77) relational_expression -> relational_expression LEQ additive_expression .
    (94) additive_expression -> additive_expression . PLUS multiplicative_expression
    (95) additive_expression -> additive_expression . MINUS multiplicative_expression

    LESS            reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    GREATER         reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    LEQ             reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    GEQ             reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    EQEQ            reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    NEQ             reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    AND             reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    OR              reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    BACKSLASH       reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    RPAREN          reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    COMMA           reduce using rule 77 (relational_expression -> relational_expression LEQ additive_expression .)
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 166

    (78) relational_expression -> relational_expression GEQ additive_expression .
    (94) additive_expression -> additive_expression . PLUS multiplicative_expression
    (95) additive_expression -> additive_expression . MINUS multiplicative_expression

    LESS            reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    GREATER         reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    LEQ             reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    GEQ             reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    EQEQ            reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    NEQ             reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    AND             reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    OR              reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    BACKSLASH       reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    RPAREN          reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    COMMA           reduce using rule 78 (relational_expression -> relational_expression GEQ additive_expression .)
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 167

    (94) additive_expression -> additive_expression PLUS multiplicative_expression .
    (106) multiplicative_expression -> multiplicative_expression . TIMES unary_expression
    (107) multiplicative_expression -> multiplicative_expression . DIVIDE unary_expression

    PLUS            reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MINUS           reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LESS            reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GREATER         reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LEQ             reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GEQ             reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQEQ            reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NEQ             reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AND             reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    OR              reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    BACKSLASH       reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RPAREN          reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COMMA           reduce using rule 94 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113


state 168

    (95) additive_expression -> additive_expression MINUS multiplicative_expression .
    (106) multiplicative_expression -> multiplicative_expression . TIMES unary_expression
    (107) multiplicative_expression -> multiplicative_expression . DIVIDE unary_expression

    PLUS            reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MINUS           reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LESS            reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GREATER         reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LEQ             reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GEQ             reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    EQEQ            reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    NEQ             reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AND             reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    OR              reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    BACKSLASH       reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RPAREN          reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COMMA           reduce using rule 95 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113


state 169

    (106) multiplicative_expression -> multiplicative_expression TIMES unary_expression .

    TIMES           reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    DIVIDE          reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    PLUS            reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    MINUS           reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    LESS            reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    GREATER         reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    LEQ             reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    GEQ             reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    EQEQ            reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    NEQ             reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    AND             reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    OR              reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    BACKSLASH       reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    RPAREN          reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)
    COMMA           reduce using rule 106 (multiplicative_expression -> multiplicative_expression TIMES unary_expression .)


state 170

    (107) multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .

    TIMES           reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    DIVIDE          reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    PLUS            reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    MINUS           reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    LESS            reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    GREATER         reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    LEQ             reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    GEQ             reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    EQEQ            reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    NEQ             reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    AND             reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    OR              reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    BACKSLASH       reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    RPAREN          reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)
    COMMA           reduce using rule 107 (multiplicative_expression -> multiplicative_expression DIVIDE unary_expression .)


state 171

    (144) postfix_expression -> postfix_expression DOT IDENTIFIER .

    DOT             reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    LPAREN          reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    TIMES           reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    DIVIDE          reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    PLUS            reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    MINUS           reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    LESS            reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    GREATER         reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    LEQ             reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    GEQ             reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    EQEQ            reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    NEQ             reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    AND             reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    OR              reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    BACKSLASH       reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    RPAREN          reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)
    COMMA           reduce using rule 144 (postfix_expression -> postfix_expression DOT IDENTIFIER .)


state 172

    (146) postfix_expression -> postfix_expression LPAREN argument_list . RPAREN
    (163) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 224
    COMMA           shift and go to state 225


state 173

    (162) argument_list -> expression .

    RPAREN          reduce using rule 162 (argument_list -> expression .)
    COMMA           reduce using rule 162 (argument_list -> expression .)


state 174

    (164) argument_list -> empty .

    RPAREN          reduce using rule 164 (argument_list -> empty .)
    COMMA           reduce using rule 164 (argument_list -> empty .)


state 175

    (109) dynamic_content -> HASH LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 226


state 176

    (70) attribute -> IDENTIFIER COLON . STRING_LITERAL

    STRING_LITERAL  shift and go to state 227


state 177

    (72) closing_tag -> HASH .
    (73) closing_tag -> HASH . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    BACKSLASH       reduce using rule 72 (closing_tag -> HASH .)
    HASH            reduce using rule 72 (closing_tag -> HASH .)
    DEFINE          reduce using rule 72 (closing_tag -> HASH .)
    CONST           reduce using rule 72 (closing_tag -> HASH .)
    SHOW            reduce using rule 72 (closing_tag -> HASH .)
    SAVE            reduce using rule 72 (closing_tag -> HASH .)
    DELETE          reduce using rule 72 (closing_tag -> HASH .)
    RETURN          reduce using rule 72 (closing_tag -> HASH .)
    THROW           reduce using rule 72 (closing_tag -> HASH .)
    CONNECT         reduce using rule 72 (closing_tag -> HASH .)
    QUERY           reduce using rule 72 (closing_tag -> HASH .)
    CLASS           reduce using rule 72 (closing_tag -> HASH .)
    IF              reduce using rule 72 (closing_tag -> HASH .)
    WHILE           reduce using rule 72 (closing_tag -> HASH .)
    FOR             reduce using rule 72 (closing_tag -> HASH .)
    TRY             reduce using rule 72 (closing_tag -> HASH .)
    TRANSACTION     reduce using rule 72 (closing_tag -> HASH .)
    APPLY           reduce using rule 72 (closing_tag -> HASH .)
    ASYNC           reduce using rule 72 (closing_tag -> HASH .)
    FUNCTION        reduce using rule 72 (closing_tag -> HASH .)
    NOT             reduce using rule 72 (closing_tag -> HASH .)
    AWAIT           reduce using rule 72 (closing_tag -> HASH .)
    INT_LITERAL     reduce using rule 72 (closing_tag -> HASH .)
    FLOAT_LITERAL   reduce using rule 72 (closing_tag -> HASH .)
    STRING_LITERAL  reduce using rule 72 (closing_tag -> HASH .)
    BOOL_LITERAL    reduce using rule 72 (closing_tag -> HASH .)
    LPAREN          reduce using rule 72 (closing_tag -> HASH .)
    MINUS           reduce using rule 72 (closing_tag -> HASH .)
    $end            reduce using rule 72 (closing_tag -> HASH .)
    CATCH           reduce using rule 72 (closing_tag -> HASH .)
    FINALLY         reduce using rule 72 (closing_tag -> HASH .)
    ELSE            reduce using rule 72 (closing_tag -> HASH .)
    IDENTIFIER      shift and go to state 228

  ! IDENTIFIER      [ reduce using rule 72 (closing_tag -> HASH .) ]


state 178

    (157) jtml_element -> HASH IDENTIFIER jtml_body closing_tag .

    BACKSLASH       reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    HASH            reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    DEFINE          reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    CONST           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    SHOW            reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    SAVE            reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    DELETE          reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    RETURN          reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    THROW           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    CONNECT         reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    QUERY           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    CLASS           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    IF              reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    WHILE           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    FOR             reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    TRY             reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    TRANSACTION     reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    APPLY           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    ASYNC           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    FUNCTION        reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    IDENTIFIER      reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    NOT             reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    AWAIT           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    INT_LITERAL     reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    FLOAT_LITERAL   reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    STRING_LITERAL  reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    BOOL_LITERAL    reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    LPAREN          reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    MINUS           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    $end            reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    CATCH           reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    FINALLY         reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)
    ELSE            reduce using rule 157 (jtml_element -> HASH IDENTIFIER jtml_body closing_tag .)


state 179

    (3) jtml_body -> jtml_attributes BACKSLASH . jtml_content_item_list
    (91) jtml_content_item_list -> . jtml_content_item_list jtml_content_item
    (92) jtml_content_item_list -> . jtml_content_item
    (100) jtml_content_item -> . statement BACKSLASH
    (101) jtml_content_item -> . expression BACKSLASH
    (102) jtml_content_item -> . dynamic_content BACKSLASH
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (16) expression -> . assignment_expression
    (109) dynamic_content -> . HASH LPAREN IDENTIFIER RPAREN
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 121
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    IDENTIFIER      shift and go to state 27
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    jtml_content_item_list         shift and go to state 229
    jtml_content_item              shift and go to state 128
    statement                      shift and go to state 129
    expression                     shift and go to state 130
    dynamic_content                shift and go to state 131
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    assignment_expression          shift and go to state 58
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 180

    (63) jtml_attributes -> jtml_attributes attribute .

    BACKSLASH       reduce using rule 63 (jtml_attributes -> jtml_attributes attribute .)
    IDENTIFIER      reduce using rule 63 (jtml_attributes -> jtml_attributes attribute .)
    HASH            reduce using rule 63 (jtml_attributes -> jtml_attributes attribute .)


state 181

    (70) attribute -> IDENTIFIER . COLON STRING_LITERAL

    COLON           shift and go to state 176


state 182

    (91) jtml_content_item_list -> jtml_content_item_list jtml_content_item .

    HASH            reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    DEFINE          reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    CONST           reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    SHOW            reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    SAVE            reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    DELETE          reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    RETURN          reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    THROW           reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    CONNECT         reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    QUERY           reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    CLASS           reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    IF              reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    WHILE           reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    FOR             reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    TRY             reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    TRANSACTION     reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    IDENTIFIER      reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    APPLY           reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    ASYNC           reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    FUNCTION        reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    NOT             reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    AWAIT           reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    INT_LITERAL     reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    FLOAT_LITERAL   reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    STRING_LITERAL  reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    BOOL_LITERAL    reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    LPAREN          reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)
    MINUS           reduce using rule 91 (jtml_content_item_list -> jtml_content_item_list jtml_content_item .)


state 183

    (100) jtml_content_item -> statement BACKSLASH .

    HASH            reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    DEFINE          reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    CONST           reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    SHOW            reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    SAVE            reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    DELETE          reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    RETURN          reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    THROW           reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    CONNECT         reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    QUERY           reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    CLASS           reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    IF              reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    WHILE           reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    FOR             reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    TRY             reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    TRANSACTION     reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    IDENTIFIER      reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    APPLY           reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    ASYNC           reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    FUNCTION        reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    NOT             reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    AWAIT           reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    INT_LITERAL     reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    FLOAT_LITERAL   reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    STRING_LITERAL  reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    BOOL_LITERAL    reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    LPAREN          reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)
    MINUS           reduce using rule 100 (jtml_content_item -> statement BACKSLASH .)


state 184

    (101) jtml_content_item -> expression BACKSLASH .

    HASH            reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    DEFINE          reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    CONST           reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    SHOW            reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    SAVE            reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    DELETE          reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    RETURN          reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    THROW           reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    CONNECT         reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    QUERY           reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    CLASS           reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    IF              reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    WHILE           reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    FOR             reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    TRY             reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    TRANSACTION     reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    IDENTIFIER      reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    APPLY           reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    ASYNC           reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    FUNCTION        reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    NOT             reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    AWAIT           reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    INT_LITERAL     reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    FLOAT_LITERAL   reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    STRING_LITERAL  reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    BOOL_LITERAL    reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    LPAREN          reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)
    MINUS           reduce using rule 101 (jtml_content_item -> expression BACKSLASH .)


state 185

    (102) jtml_content_item -> dynamic_content BACKSLASH .

    HASH            reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    DEFINE          reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    CONST           reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    SHOW            reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    SAVE            reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    DELETE          reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    RETURN          reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    THROW           reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    CONNECT         reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    QUERY           reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    CLASS           reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    IF              reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    WHILE           reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    FOR             reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    TRY             reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    TRANSACTION     reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    IDENTIFIER      reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    APPLY           reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    ASYNC           reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    FUNCTION        reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    NOT             reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    AWAIT           reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    INT_LITERAL     reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    FLOAT_LITERAL   reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    STRING_LITERAL  reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    BOOL_LITERAL    reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    LPAREN          reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)
    MINUS           reduce using rule 102 (jtml_content_item -> dynamic_content BACKSLASH .)


state 186

    (48) type_name -> IDENTIFIER .

    LESS            reduce using rule 48 (type_name -> IDENTIFIER .)
    EQUALS          reduce using rule 48 (type_name -> IDENTIFIER .)
    BACKSLASH       reduce using rule 48 (type_name -> IDENTIFIER .)
    GREATER         reduce using rule 48 (type_name -> IDENTIFIER .)
    COMMA           reduce using rule 48 (type_name -> IDENTIFIER .)
    RPAREN          reduce using rule 48 (type_name -> IDENTIFIER .)


state 187

    (14) variable_declaration -> DEFINE IDENTIFIER COLON type . EQUALS expression

    EQUALS          shift and go to state 230


state 188

    (12) type -> type_name .
    (13) type -> type_name . generic_arguments
    (118) generic_arguments -> . LESS type_list GREATER

    EQUALS          reduce using rule 12 (type -> type_name .)
    BACKSLASH       reduce using rule 12 (type -> type_name .)
    GREATER         reduce using rule 12 (type -> type_name .)
    COMMA           reduce using rule 12 (type -> type_name .)
    RPAREN          reduce using rule 12 (type -> type_name .)
    LESS            shift and go to state 232

    generic_arguments              shift and go to state 231

state 189

    (49) type_name -> TYPE .

    LESS            reduce using rule 49 (type_name -> TYPE .)
    EQUALS          reduce using rule 49 (type_name -> TYPE .)
    BACKSLASH       reduce using rule 49 (type_name -> TYPE .)
    GREATER         reduce using rule 49 (type_name -> TYPE .)
    COMMA           reduce using rule 49 (type_name -> TYPE .)
    RPAREN          reduce using rule 49 (type_name -> TYPE .)


state 190

    (31) variable_declaration -> DEFINE IDENTIFIER EQUALS expression .

    BACKSLASH       reduce using rule 31 (variable_declaration -> DEFINE IDENTIFIER EQUALS expression .)


state 191

    (39) crypto_generate_key_expr -> DEFINE IDENTIFIER EQUALS GENERATE_KEY . type_spec param_list_opt
    (56) type_spec -> . TYPE COLON STRING_LITERAL

    TYPE            shift and go to state 234

    type_spec                      shift and go to state 233

state 192

    (62) crypto_derive_public_key_expr -> DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY . FROM IDENTIFIER

    FROM            shift and go to state 235


state 193

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT . DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    DATA            shift and go to state 236


state 194

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT . DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    DATA            shift and go to state 237


state 195

    (93) crypto_hash_expr -> DEFINE IDENTIFIER EQUALS HASH . DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    DATA            shift and go to state 238


state 196

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN . DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    DATA            shift and go to state 239


state 197

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY . SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    SIGNATURE       shift and go to state 240


state 198

    (46) quantum_measure_expr -> DEFINE IDENTIFIER EQUALS MEASURE . IDENTIFIER

    IDENTIFIER      shift and go to state 241


state 199

    (30) quantum_define_qubit -> DEFINE IDENTIFIER AS QUBIT .

    BACKSLASH       reduce using rule 30 (quantum_define_qubit -> DEFINE IDENTIFIER AS QUBIT .)


state 200

    (43) const_declaration -> CONST IDENTIFIER COLON type . EQUALS expression

    EQUALS          shift and go to state 242


state 201

    (53) const_declaration -> CONST IDENTIFIER EQUALS expression .

    BACKSLASH       reduce using rule 53 (const_declaration -> CONST IDENTIFIER EQUALS expression .)


state 202

    (34) save_statement -> SAVE IDENTIFIER EQUALS expression .

    BACKSLASH       reduce using rule 34 (save_statement -> SAVE IDENTIFIER EQUALS expression .)


state 203

    (7) connect_statement -> CONNECT TO STRING_LITERAL AS . IDENTIFIER

    IDENTIFIER      shift and go to state 243


state 204

    (26) query_statement -> QUERY ON IDENTIFIER COLON . STRING_LITERAL

    STRING_LITERAL  shift and go to state 244


state 205

    (119) statement_list -> statement BACKSLASH .
    (122) statement_list -> statement BACKSLASH . statement_list
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    BACKSLASH       reduce using rule 119 (statement_list -> statement BACKSLASH .)
    CATCH           reduce using rule 119 (statement_list -> statement BACKSLASH .)
    FINALLY         reduce using rule 119 (statement_list -> statement BACKSLASH .)
    ELSE            reduce using rule 119 (statement_list -> statement BACKSLASH .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    statement                      shift and go to state 144
    statement_list                 shift and go to state 245
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 206

    (99) class_declaration -> CLASS IDENTIFIER BACKSLASH statement_list_opt .

    BACKSLASH       reduce using rule 99 (class_declaration -> CLASS IDENTIFIER BACKSLASH statement_list_opt .)


state 207

    (1) if_statement -> IF LPAREN expression RPAREN . BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> IF LPAREN expression RPAREN . BACKSLASH statement_list_opt

    BACKSLASH       shift and go to state 246


state 208

    (28) while_statement -> WHILE LPAREN expression RPAREN . BACKSLASH statement_list_opt

    BACKSLASH       shift and go to state 247


state 209

    (35) for_statement -> FOR LPAREN IDENTIFIER IN . expression RPAREN BACKSLASH statement_list_opt
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 248
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 210

    (25) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH . LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH . LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt

    LPAREN          shift and go to state 249


state 211

    (38) try_catch_finally -> TRY BACKSLASH statement_list_opt FINALLY . BACKSLASH statement_list_opt

    BACKSLASH       shift and go to state 250


state 212

    (33) transaction_block -> TRANSACTION ON IDENTIFIER BACKSLASH . statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    statement_list_opt             shift and go to state 251
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 213

    (167) identifier_list -> IDENTIFIER .

    COMMA           reduce using rule 167 (identifier_list -> IDENTIFIER .)
    BACKSLASH       reduce using rule 167 (identifier_list -> IDENTIFIER .)


state 214

    (37) quantum_apply -> APPLY IDENTIFIER ON identifier_list .
    (168) identifier_list -> identifier_list . COMMA IDENTIFIER

    BACKSLASH       reduce using rule 37 (quantum_apply -> APPLY IDENTIFIER ON identifier_list .)
    COMMA           shift and go to state 252


state 215

    (45) function_head -> ASYNC FUNCTION IDENTIFIER parameter_list . function_return_type
    (158) function_return_type -> . COLON type
    (160) function_return_type -> . empty
    (87) empty -> .

    COLON           shift and go to state 217
    BACKSLASH       reduce using rule 87 (empty -> .)

    function_return_type           shift and go to state 253
    empty                          shift and go to state 218

state 216

    (52) function_head -> FUNCTION IDENTIFIER parameter_list function_return_type .

    BACKSLASH       reduce using rule 52 (function_head -> FUNCTION IDENTIFIER parameter_list function_return_type .)


state 217

    (158) function_return_type -> COLON . type
    (12) type -> . type_name
    (13) type -> . type_name generic_arguments
    (48) type_name -> . IDENTIFIER
    (49) type_name -> . TYPE

    IDENTIFIER      shift and go to state 186
    TYPE            shift and go to state 189

    type                           shift and go to state 254
    type_name                      shift and go to state 188

state 218

    (160) function_return_type -> empty .

    BACKSLASH       reduce using rule 160 (function_return_type -> empty .)


state 219

    (145) parameter_list -> LPAREN parameters_opt . RPAREN

    RPAREN          shift and go to state 255


state 220

    (147) parameters_opt -> parameters .
    (150) parameters -> parameters . COMMA parameter

    RPAREN          reduce using rule 147 (parameters_opt -> parameters .)
    COMMA           shift and go to state 256


state 221

    (148) parameters_opt -> empty .

    RPAREN          reduce using rule 148 (parameters_opt -> empty .)


state 222

    (155) parameters -> parameter .

    COMMA           reduce using rule 155 (parameters -> parameter .)
    RPAREN          reduce using rule 155 (parameters -> parameter .)


state 223

    (156) parameter -> IDENTIFIER . COLON type

    COLON           shift and go to state 257


state 224

    (146) postfix_expression -> postfix_expression LPAREN argument_list RPAREN .

    DOT             reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    TIMES           reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    LESS            reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    GREATER         reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    EQEQ            reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    AND             reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    OR              reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    BACKSLASH       reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 146 (postfix_expression -> postfix_expression LPAREN argument_list RPAREN .)


state 225

    (163) argument_list -> argument_list COMMA . expression
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 258
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 226

    (109) dynamic_content -> HASH LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 259


state 227

    (70) attribute -> IDENTIFIER COLON STRING_LITERAL .

    BACKSLASH       reduce using rule 70 (attribute -> IDENTIFIER COLON STRING_LITERAL .)
    IDENTIFIER      reduce using rule 70 (attribute -> IDENTIFIER COLON STRING_LITERAL .)
    HASH            reduce using rule 70 (attribute -> IDENTIFIER COLON STRING_LITERAL .)


state 228

    (73) closing_tag -> HASH IDENTIFIER .

    BACKSLASH       reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    HASH            reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    DEFINE          reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    CONST           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    SHOW            reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    SAVE            reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    DELETE          reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    RETURN          reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    THROW           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    CONNECT         reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    QUERY           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    CLASS           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    IF              reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    WHILE           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    FOR             reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    TRY             reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    TRANSACTION     reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    APPLY           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    ASYNC           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    FUNCTION        reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    IDENTIFIER      reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    NOT             reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    AWAIT           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    INT_LITERAL     reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    FLOAT_LITERAL   reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    STRING_LITERAL  reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    BOOL_LITERAL    reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    LPAREN          reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    MINUS           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    $end            reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    CATCH           reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    FINALLY         reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)
    ELSE            reduce using rule 73 (closing_tag -> HASH IDENTIFIER .)


state 229

    (3) jtml_body -> jtml_attributes BACKSLASH jtml_content_item_list .
    (91) jtml_content_item_list -> jtml_content_item_list . jtml_content_item
    (100) jtml_content_item -> . statement BACKSLASH
    (101) jtml_content_item -> . expression BACKSLASH
    (102) jtml_content_item -> . dynamic_content BACKSLASH
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (16) expression -> . assignment_expression
    (109) dynamic_content -> . HASH LPAREN IDENTIFIER RPAREN
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            reduce using rule 3 (jtml_body -> jtml_attributes BACKSLASH jtml_content_item_list .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    IDENTIFIER      shift and go to state 27
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

  ! HASH            [ shift and go to state 121 ]

    jtml_content_item              shift and go to state 182
    statement                      shift and go to state 129
    expression                     shift and go to state 130
    dynamic_content                shift and go to state 131
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    assignment_expression          shift and go to state 58
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 230

    (14) variable_declaration -> DEFINE IDENTIFIER COLON type EQUALS . expression
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 260
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 231

    (13) type -> type_name generic_arguments .

    EQUALS          reduce using rule 13 (type -> type_name generic_arguments .)
    BACKSLASH       reduce using rule 13 (type -> type_name generic_arguments .)
    GREATER         reduce using rule 13 (type -> type_name generic_arguments .)
    COMMA           reduce using rule 13 (type -> type_name generic_arguments .)
    RPAREN          reduce using rule 13 (type -> type_name generic_arguments .)


state 232

    (118) generic_arguments -> LESS . type_list GREATER
    (121) type_list -> . type
    (124) type_list -> . type_list COMMA type
    (12) type -> . type_name
    (13) type -> . type_name generic_arguments
    (48) type_name -> . IDENTIFIER
    (49) type_name -> . TYPE

    IDENTIFIER      shift and go to state 186
    TYPE            shift and go to state 189

    type_list                      shift and go to state 261
    type                           shift and go to state 262
    type_name                      shift and go to state 188

state 233

    (39) crypto_generate_key_expr -> DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec . param_list_opt
    (60) param_list_opt -> . COMMA param_list
    (61) param_list_opt -> . empty
    (87) empty -> .

    COMMA           shift and go to state 264
    BACKSLASH       reduce using rule 87 (empty -> .)

    param_list_opt                 shift and go to state 263
    empty                          shift and go to state 265

state 234

    (56) type_spec -> TYPE . COLON STRING_LITERAL

    COLON           shift and go to state 266


state 235

    (62) crypto_derive_public_key_expr -> DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM . IDENTIFIER

    IDENTIFIER      shift and go to state 267


state 236

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA . COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 268


state 237

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA . COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 269


state 238

    (93) crypto_hash_expr -> DEFINE IDENTIFIER EQUALS HASH DATA . COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 270


state 239

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA . COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 271


state 240

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE . COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 272


state 241

    (46) quantum_measure_expr -> DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER .

    BACKSLASH       reduce using rule 46 (quantum_measure_expr -> DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER .)


state 242

    (43) const_declaration -> CONST IDENTIFIER COLON type EQUALS . expression
    (16) expression -> . assignment_expression
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 273
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 243

    (7) connect_statement -> CONNECT TO STRING_LITERAL AS IDENTIFIER .

    BACKSLASH       reduce using rule 7 (connect_statement -> CONNECT TO STRING_LITERAL AS IDENTIFIER .)


state 244

    (26) query_statement -> QUERY ON IDENTIFIER COLON STRING_LITERAL .

    BACKSLASH       reduce using rule 26 (query_statement -> QUERY ON IDENTIFIER COLON STRING_LITERAL .)


state 245

    (122) statement_list -> statement BACKSLASH statement_list .

    BACKSLASH       reduce using rule 122 (statement_list -> statement BACKSLASH statement_list .)
    CATCH           reduce using rule 122 (statement_list -> statement BACKSLASH statement_list .)
    FINALLY         reduce using rule 122 (statement_list -> statement BACKSLASH statement_list .)
    ELSE            reduce using rule 122 (statement_list -> statement BACKSLASH statement_list .)


state 246

    (1) if_statement -> IF LPAREN expression RPAREN BACKSLASH . statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> IF LPAREN expression RPAREN BACKSLASH . statement_list_opt
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    ELSE            reduce using rule 87 (empty -> .)
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 29
    statement_list_opt             shift and go to state 274
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 247

    (28) while_statement -> WHILE LPAREN expression RPAREN BACKSLASH . statement_list_opt
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 29
    statement_list_opt             shift and go to state 275
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 248

    (35) for_statement -> FOR LPAREN IDENTIFIER IN expression . RPAREN BACKSLASH statement_list_opt

    RPAREN          shift and go to state 276


state 249

    (25) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN . IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN . IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt

    IDENTIFIER      shift and go to state 277


state 250

    (38) try_catch_finally -> TRY BACKSLASH statement_list_opt FINALLY BACKSLASH . statement_list_opt
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    statement_list_opt             shift and go to state 278
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 251

    (33) transaction_block -> TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt . BACKSLASH commit_rollback BACKSLASH

    BACKSLASH       shift and go to state 279


state 252

    (168) identifier_list -> identifier_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 280


state 253

    (45) function_head -> ASYNC FUNCTION IDENTIFIER parameter_list function_return_type .

    BACKSLASH       reduce using rule 45 (function_head -> ASYNC FUNCTION IDENTIFIER parameter_list function_return_type .)


state 254

    (158) function_return_type -> COLON type .

    BACKSLASH       reduce using rule 158 (function_return_type -> COLON type .)


state 255

    (145) parameter_list -> LPAREN parameters_opt RPAREN .

    COLON           reduce using rule 145 (parameter_list -> LPAREN parameters_opt RPAREN .)
    BACKSLASH       reduce using rule 145 (parameter_list -> LPAREN parameters_opt RPAREN .)


state 256

    (150) parameters -> parameters COMMA . parameter
    (156) parameter -> . IDENTIFIER COLON type

    IDENTIFIER      shift and go to state 223

    parameter                      shift and go to state 281

state 257

    (156) parameter -> IDENTIFIER COLON . type
    (12) type -> . type_name
    (13) type -> . type_name generic_arguments
    (48) type_name -> . IDENTIFIER
    (49) type_name -> . TYPE

    IDENTIFIER      shift and go to state 186
    TYPE            shift and go to state 189

    type                           shift and go to state 282
    type_name                      shift and go to state 188

state 258

    (163) argument_list -> argument_list COMMA expression .

    RPAREN          reduce using rule 163 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 163 (argument_list -> argument_list COMMA expression .)


state 259

    (109) dynamic_content -> HASH LPAREN IDENTIFIER RPAREN .

    BACKSLASH       reduce using rule 109 (dynamic_content -> HASH LPAREN IDENTIFIER RPAREN .)


state 260

    (14) variable_declaration -> DEFINE IDENTIFIER COLON type EQUALS expression .

    BACKSLASH       reduce using rule 14 (variable_declaration -> DEFINE IDENTIFIER COLON type EQUALS expression .)


state 261

    (118) generic_arguments -> LESS type_list . GREATER
    (124) type_list -> type_list . COMMA type

    GREATER         shift and go to state 283
    COMMA           shift and go to state 284


state 262

    (121) type_list -> type .

    GREATER         reduce using rule 121 (type_list -> type .)
    COMMA           reduce using rule 121 (type_list -> type .)


state 263

    (39) crypto_generate_key_expr -> DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt .

    BACKSLASH       reduce using rule 39 (crypto_generate_key_expr -> DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt .)


state 264

    (60) param_list_opt -> COMMA . param_list
    (69) param_list -> . param_list COMMA param
    (71) param_list -> . param
    (80) param -> . IDENTIFIER COLON value
    (81) param -> . DB COLON value
    (82) param -> . SIZE COLON value
    (83) param -> . ALGORITHM COLON value
    (84) param -> . KEY COLON value
    (85) param -> . DATA COLON value
    (86) param -> . SIGNATURE COLON value

    IDENTIFIER      shift and go to state 287
    DB              shift and go to state 288
    SIZE            shift and go to state 289
    ALGORITHM       shift and go to state 290
    KEY             shift and go to state 291
    DATA            shift and go to state 292
    SIGNATURE       shift and go to state 293

    param_list                     shift and go to state 285
    param                          shift and go to state 286

state 265

    (61) param_list_opt -> empty .

    BACKSLASH       reduce using rule 61 (param_list_opt -> empty .)


state 266

    (56) type_spec -> TYPE COLON . STRING_LITERAL

    STRING_LITERAL  shift and go to state 294


state 267

    (62) crypto_derive_public_key_expr -> DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER .

    BACKSLASH       reduce using rule 62 (crypto_derive_public_key_expr -> DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER .)


state 268

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON . STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 295


state 269

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON . STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 296


state 270

    (93) crypto_hash_expr -> DEFINE IDENTIFIER EQUALS HASH DATA COLON . STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 297


state 271

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON . STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 298


state 272

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON . STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 299


state 273

    (43) const_declaration -> CONST IDENTIFIER COLON type EQUALS expression .

    BACKSLASH       reduce using rule 43 (const_declaration -> CONST IDENTIFIER COLON type EQUALS expression .)


state 274

    (1) if_statement -> IF LPAREN expression RPAREN BACKSLASH statement_list_opt . ELSE BACKSLASH statement_list_opt
    (15) if_statement -> IF LPAREN expression RPAREN BACKSLASH statement_list_opt .

    ELSE            shift and go to state 300
    BACKSLASH       reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN BACKSLASH statement_list_opt .)


state 275

    (28) while_statement -> WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt .

    BACKSLASH       reduce using rule 28 (while_statement -> WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt .)


state 276

    (35) for_statement -> FOR LPAREN IDENTIFIER IN expression RPAREN . BACKSLASH statement_list_opt

    BACKSLASH       shift and go to state 301


state 277

    (25) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER . RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER . RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt

    RPAREN          shift and go to state 302


state 278

    (38) try_catch_finally -> TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt .

    BACKSLASH       reduce using rule 38 (try_catch_finally -> TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt .)


state 279

    (33) transaction_block -> TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH . commit_rollback BACKSLASH
    (40) commit_rollback -> . COMMIT
    (41) commit_rollback -> . ROLLBACK

    COMMIT          shift and go to state 304
    ROLLBACK        shift and go to state 305

    commit_rollback                shift and go to state 303

state 280

    (168) identifier_list -> identifier_list COMMA IDENTIFIER .

    COMMA           reduce using rule 168 (identifier_list -> identifier_list COMMA IDENTIFIER .)
    BACKSLASH       reduce using rule 168 (identifier_list -> identifier_list COMMA IDENTIFIER .)


state 281

    (150) parameters -> parameters COMMA parameter .

    COMMA           reduce using rule 150 (parameters -> parameters COMMA parameter .)
    RPAREN          reduce using rule 150 (parameters -> parameters COMMA parameter .)


state 282

    (156) parameter -> IDENTIFIER COLON type .

    COMMA           reduce using rule 156 (parameter -> IDENTIFIER COLON type .)
    RPAREN          reduce using rule 156 (parameter -> IDENTIFIER COLON type .)


state 283

    (118) generic_arguments -> LESS type_list GREATER .

    EQUALS          reduce using rule 118 (generic_arguments -> LESS type_list GREATER .)
    BACKSLASH       reduce using rule 118 (generic_arguments -> LESS type_list GREATER .)
    GREATER         reduce using rule 118 (generic_arguments -> LESS type_list GREATER .)
    COMMA           reduce using rule 118 (generic_arguments -> LESS type_list GREATER .)
    RPAREN          reduce using rule 118 (generic_arguments -> LESS type_list GREATER .)


state 284

    (124) type_list -> type_list COMMA . type
    (12) type -> . type_name
    (13) type -> . type_name generic_arguments
    (48) type_name -> . IDENTIFIER
    (49) type_name -> . TYPE

    IDENTIFIER      shift and go to state 186
    TYPE            shift and go to state 189

    type                           shift and go to state 306
    type_name                      shift and go to state 188

state 285

    (60) param_list_opt -> COMMA param_list .
    (69) param_list -> param_list . COMMA param

    BACKSLASH       reduce using rule 60 (param_list_opt -> COMMA param_list .)
    COMMA           shift and go to state 307


state 286

    (71) param_list -> param .

    COMMA           reduce using rule 71 (param_list -> param .)
    BACKSLASH       reduce using rule 71 (param_list -> param .)


state 287

    (80) param -> IDENTIFIER . COLON value

    COLON           shift and go to state 308


state 288

    (81) param -> DB . COLON value

    COLON           shift and go to state 309


state 289

    (82) param -> SIZE . COLON value

    COLON           shift and go to state 310


state 290

    (83) param -> ALGORITHM . COLON value

    COLON           shift and go to state 311


state 291

    (84) param -> KEY . COLON value

    COLON           shift and go to state 312


state 292

    (85) param -> DATA . COLON value

    COLON           shift and go to state 313


state 293

    (86) param -> SIGNATURE . COLON value

    COLON           shift and go to state 314


state 294

    (56) type_spec -> TYPE COLON STRING_LITERAL .

    COMMA           reduce using rule 56 (type_spec -> TYPE COLON STRING_LITERAL .)
    BACKSLASH       reduce using rule 56 (type_spec -> TYPE COLON STRING_LITERAL .)


state 295

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL . WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    WITH            shift and go to state 315


state 296

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL . WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    WITH            shift and go to state 316


state 297

    (93) crypto_hash_expr -> DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL . ALGORITHM COLON STRING_LITERAL

    ALGORITHM       shift and go to state 317


state 298

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL . WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    WITH            shift and go to state 318


state 299

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL . DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    DATA            shift and go to state 319


state 300

    (1) if_statement -> IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE . BACKSLASH statement_list_opt

    BACKSLASH       shift and go to state 320


state 301

    (35) for_statement -> FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH . statement_list_opt
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 29
    statement_list_opt             shift and go to state 321
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 302

    (25) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN . BACKSLASH statement_list_opt
    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN . BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt

    BACKSLASH       shift and go to state 322


state 303

    (33) transaction_block -> TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback . BACKSLASH

    BACKSLASH       shift and go to state 323


state 304

    (40) commit_rollback -> COMMIT .

    BACKSLASH       reduce using rule 40 (commit_rollback -> COMMIT .)


state 305

    (41) commit_rollback -> ROLLBACK .

    BACKSLASH       reduce using rule 41 (commit_rollback -> ROLLBACK .)


state 306

    (124) type_list -> type_list COMMA type .

    GREATER         reduce using rule 124 (type_list -> type_list COMMA type .)
    COMMA           reduce using rule 124 (type_list -> type_list COMMA type .)


state 307

    (69) param_list -> param_list COMMA . param
    (80) param -> . IDENTIFIER COLON value
    (81) param -> . DB COLON value
    (82) param -> . SIZE COLON value
    (83) param -> . ALGORITHM COLON value
    (84) param -> . KEY COLON value
    (85) param -> . DATA COLON value
    (86) param -> . SIGNATURE COLON value

    IDENTIFIER      shift and go to state 287
    DB              shift and go to state 288
    SIZE            shift and go to state 289
    ALGORITHM       shift and go to state 290
    KEY             shift and go to state 291
    DATA            shift and go to state 292
    SIGNATURE       shift and go to state 293

    param                          shift and go to state 324

state 308

    (80) param -> IDENTIFIER COLON . value
    (114) value -> . STRING_LITERAL
    (115) value -> . INT_LITERAL

    STRING_LITERAL  shift and go to state 326
    INT_LITERAL     shift and go to state 327

    value                          shift and go to state 325

state 309

    (81) param -> DB COLON . value
    (114) value -> . STRING_LITERAL
    (115) value -> . INT_LITERAL

    STRING_LITERAL  shift and go to state 326
    INT_LITERAL     shift and go to state 327

    value                          shift and go to state 328

state 310

    (82) param -> SIZE COLON . value
    (114) value -> . STRING_LITERAL
    (115) value -> . INT_LITERAL

    STRING_LITERAL  shift and go to state 326
    INT_LITERAL     shift and go to state 327

    value                          shift and go to state 329

state 311

    (83) param -> ALGORITHM COLON . value
    (114) value -> . STRING_LITERAL
    (115) value -> . INT_LITERAL

    STRING_LITERAL  shift and go to state 326
    INT_LITERAL     shift and go to state 327

    value                          shift and go to state 330

state 312

    (84) param -> KEY COLON . value
    (114) value -> . STRING_LITERAL
    (115) value -> . INT_LITERAL

    STRING_LITERAL  shift and go to state 326
    INT_LITERAL     shift and go to state 327

    value                          shift and go to state 331

state 313

    (85) param -> DATA COLON . value
    (114) value -> . STRING_LITERAL
    (115) value -> . INT_LITERAL

    STRING_LITERAL  shift and go to state 326
    INT_LITERAL     shift and go to state 327

    value                          shift and go to state 332

state 314

    (86) param -> SIGNATURE COLON . value
    (114) value -> . STRING_LITERAL
    (115) value -> . INT_LITERAL

    STRING_LITERAL  shift and go to state 326
    INT_LITERAL     shift and go to state 327

    value                          shift and go to state 333

state 315

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH . KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    KEY             shift and go to state 334


state 316

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH . KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    KEY             shift and go to state 335


state 317

    (93) crypto_hash_expr -> DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM . COLON STRING_LITERAL

    COLON           shift and go to state 336


state 318

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH . KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    KEY             shift and go to state 337


state 319

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA . COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 338


state 320

    (1) if_statement -> IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH . statement_list_opt
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    expression                     shift and go to state 29
    statement_list_opt             shift and go to state 339
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 321

    (35) for_statement -> FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt .

    BACKSLASH       reduce using rule 35 (for_statement -> FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt .)


state 322

    (25) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH . statement_list_opt
    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH . statement_list_opt FINALLY BACKSLASH statement_list_opt
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    FINALLY         reduce using rule 87 (empty -> .)
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    statement_list_opt             shift and go to state 340
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 323

    (33) transaction_block -> TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH .

    BACKSLASH       reduce using rule 33 (transaction_block -> TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH .)


state 324

    (69) param_list -> param_list COMMA param .

    COMMA           reduce using rule 69 (param_list -> param_list COMMA param .)
    BACKSLASH       reduce using rule 69 (param_list -> param_list COMMA param .)


state 325

    (80) param -> IDENTIFIER COLON value .

    COMMA           reduce using rule 80 (param -> IDENTIFIER COLON value .)
    BACKSLASH       reduce using rule 80 (param -> IDENTIFIER COLON value .)


state 326

    (114) value -> STRING_LITERAL .

    COMMA           reduce using rule 114 (value -> STRING_LITERAL .)
    BACKSLASH       reduce using rule 114 (value -> STRING_LITERAL .)


state 327

    (115) value -> INT_LITERAL .

    COMMA           reduce using rule 115 (value -> INT_LITERAL .)
    BACKSLASH       reduce using rule 115 (value -> INT_LITERAL .)


state 328

    (81) param -> DB COLON value .

    COMMA           reduce using rule 81 (param -> DB COLON value .)
    BACKSLASH       reduce using rule 81 (param -> DB COLON value .)


state 329

    (82) param -> SIZE COLON value .

    COMMA           reduce using rule 82 (param -> SIZE COLON value .)
    BACKSLASH       reduce using rule 82 (param -> SIZE COLON value .)


state 330

    (83) param -> ALGORITHM COLON value .

    COMMA           reduce using rule 83 (param -> ALGORITHM COLON value .)
    BACKSLASH       reduce using rule 83 (param -> ALGORITHM COLON value .)


state 331

    (84) param -> KEY COLON value .

    COMMA           reduce using rule 84 (param -> KEY COLON value .)
    BACKSLASH       reduce using rule 84 (param -> KEY COLON value .)


state 332

    (85) param -> DATA COLON value .

    COMMA           reduce using rule 85 (param -> DATA COLON value .)
    BACKSLASH       reduce using rule 85 (param -> DATA COLON value .)


state 333

    (86) param -> SIGNATURE COLON value .

    COMMA           reduce using rule 86 (param -> SIGNATURE COLON value .)
    BACKSLASH       reduce using rule 86 (param -> SIGNATURE COLON value .)


state 334

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY . COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 341


state 335

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY . COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 342


state 336

    (93) crypto_hash_expr -> DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON . STRING_LITERAL

    STRING_LITERAL  shift and go to state 343


state 337

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY . COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 344


state 338

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON . STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 345


state 339

    (1) if_statement -> IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt .

    BACKSLASH       reduce using rule 1 (if_statement -> IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt .)


state 340

    (25) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt .
    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt . FINALLY BACKSLASH statement_list_opt

    BACKSLASH       reduce using rule 25 (try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt .)
    FINALLY         shift and go to state 346


state 341

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON . STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 347


state 342

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON . STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 348


state 343

    (93) crypto_hash_expr -> DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .

    BACKSLASH       reduce using rule 93 (crypto_hash_expr -> DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .)


state 344

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON . STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 349


state 345

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL . WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    WITH            shift and go to state 350


state 346

    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY . BACKSLASH statement_list_opt

    BACKSLASH       shift and go to state 351


state 347

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL . ALGORITHM COLON STRING_LITERAL

    ALGORITHM       shift and go to state 352


state 348

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL . ALGORITHM COLON STRING_LITERAL

    ALGORITHM       shift and go to state 353


state 349

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL . ALGORITHM COLON STRING_LITERAL

    ALGORITHM       shift and go to state 354


state 350

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH . KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    KEY             shift and go to state 355


state 351

    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH . statement_list_opt
    (110) statement_list_opt -> . statement_list
    (111) statement_list_opt -> . jtml_element
    (112) statement_list_opt -> . empty
    (119) statement_list -> . statement BACKSLASH
    (122) statement_list -> . statement BACKSLASH statement_list
    (157) jtml_element -> . HASH IDENTIFIER jtml_body closing_tag
    (87) empty -> .
    (125) statement -> . variable_declaration
    (126) statement -> . const_declaration
    (127) statement -> . show_statement
    (128) statement -> . save_statement
    (129) statement -> . delete_statement
    (130) statement -> . return_statement
    (131) statement -> . throw_statement
    (132) statement -> . connect_statement
    (133) statement -> . query_statement
    (134) statement -> . crypto_statement
    (135) statement -> . quantum_statement
    (136) statement -> . expression_statement
    (137) statement -> . function_declaration
    (138) statement -> . class_declaration
    (139) statement -> . if_statement
    (140) statement -> . while_statement
    (141) statement -> . for_statement
    (142) statement -> . try_catch_finally
    (143) statement -> . transaction_block
    (14) variable_declaration -> . DEFINE IDENTIFIER COLON type EQUALS expression
    (31) variable_declaration -> . DEFINE IDENTIFIER EQUALS expression
    (43) const_declaration -> . CONST IDENTIFIER COLON type EQUALS expression
    (53) const_declaration -> . CONST IDENTIFIER EQUALS expression
    (27) show_statement -> . SHOW expression
    (34) save_statement -> . SAVE IDENTIFIER EQUALS expression
    (42) delete_statement -> . DELETE IDENTIFIER
    (54) return_statement -> . RETURN expression
    (57) return_statement -> . RETURN
    (47) throw_statement -> . THROW expression
    (7) connect_statement -> . CONNECT TO STRING_LITERAL AS IDENTIFIER
    (26) query_statement -> . QUERY ON IDENTIFIER COLON STRING_LITERAL
    (18) crypto_statement -> . crypto_generate_key_expr
    (19) crypto_statement -> . crypto_derive_public_key_expr
    (20) crypto_statement -> . crypto_encrypt_expr
    (21) crypto_statement -> . crypto_decrypt_expr
    (22) crypto_statement -> . crypto_hash_expr
    (23) crypto_statement -> . crypto_sign_expr
    (24) crypto_statement -> . crypto_verify_expr
    (8) quantum_statement -> . quantum_define_qubit
    (9) quantum_statement -> . quantum_apply
    (10) quantum_statement -> . quantum_measure_expr
    (11) expression_statement -> . expression
    (17) function_declaration -> . function_head BACKSLASH function_body
    (99) class_declaration -> . CLASS IDENTIFIER BACKSLASH statement_list_opt
    (1) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt ELSE BACKSLASH statement_list_opt
    (15) if_statement -> . IF LPAREN expression RPAREN BACKSLASH statement_list_opt
    (28) while_statement -> . WHILE LPAREN expression RPAREN BACKSLASH statement_list_opt
    (35) for_statement -> . FOR LPAREN IDENTIFIER IN expression RPAREN BACKSLASH statement_list_opt
    (2) try_catch_finally -> . TRY BACKSLASH statement_list_opt
    (25) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt
    (32) try_catch_finally -> . TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (38) try_catch_finally -> . TRY BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt
    (33) transaction_block -> . TRANSACTION ON IDENTIFIER BACKSLASH statement_list_opt BACKSLASH commit_rollback BACKSLASH
    (39) crypto_generate_key_expr -> . DEFINE IDENTIFIER EQUALS GENERATE_KEY type_spec param_list_opt
    (62) crypto_derive_public_key_expr -> . DEFINE IDENTIFIER EQUALS DERIVE_PUBLIC_KEY FROM IDENTIFIER
    (65) crypto_encrypt_expr -> . DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (74) crypto_decrypt_expr -> . DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (93) crypto_hash_expr -> . DEFINE IDENTIFIER EQUALS HASH DATA COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (103) crypto_sign_expr -> . DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (113) crypto_verify_expr -> . DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL
    (30) quantum_define_qubit -> . DEFINE IDENTIFIER AS QUBIT
    (37) quantum_apply -> . APPLY IDENTIFIER ON identifier_list
    (46) quantum_measure_expr -> . DEFINE IDENTIFIER EQUALS MEASURE IDENTIFIER
    (16) expression -> . assignment_expression
    (45) function_head -> . ASYNC FUNCTION IDENTIFIER parameter_list function_return_type
    (52) function_head -> . FUNCTION IDENTIFIER parameter_list function_return_type
    (29) assignment_expression -> . IDENTIFIER PLUSEQ expression
    (36) assignment_expression -> . IDENTIFIER EQUALS expression
    (44) assignment_expression -> . logical_or_expression
    (50) logical_or_expression -> . logical_or_expression OR logical_and_expression
    (51) logical_or_expression -> . logical_and_expression
    (58) logical_and_expression -> . logical_and_expression AND equality_expression
    (59) logical_and_expression -> . equality_expression
    (66) equality_expression -> . equality_expression EQEQ relational_expression
    (67) equality_expression -> . equality_expression NEQ relational_expression
    (68) equality_expression -> . relational_expression
    (75) relational_expression -> . relational_expression LESS additive_expression
    (76) relational_expression -> . relational_expression GREATER additive_expression
    (77) relational_expression -> . relational_expression LEQ additive_expression
    (78) relational_expression -> . relational_expression GEQ additive_expression
    (79) relational_expression -> . additive_expression
    (94) additive_expression -> . additive_expression PLUS multiplicative_expression
    (95) additive_expression -> . additive_expression MINUS multiplicative_expression
    (96) additive_expression -> . multiplicative_expression
    (106) multiplicative_expression -> . multiplicative_expression TIMES unary_expression
    (107) multiplicative_expression -> . multiplicative_expression DIVIDE unary_expression
    (108) multiplicative_expression -> . unary_expression
    (116) unary_expression -> . NOT unary_expression
    (120) unary_expression -> . AWAIT unary_expression
    (123) unary_expression -> . postfix_expression
    (144) postfix_expression -> . postfix_expression DOT IDENTIFIER
    (146) postfix_expression -> . postfix_expression LPAREN argument_list RPAREN
    (149) postfix_expression -> . primary_expression
    (151) primary_expression -> . INT_LITERAL
    (152) primary_expression -> . FLOAT_LITERAL
    (153) primary_expression -> . STRING_LITERAL
    (154) primary_expression -> . BOOL_LITERAL
    (159) primary_expression -> . IDENTIFIER
    (161) primary_expression -> . LPAREN expression RPAREN
    (165) primary_expression -> . MINUS INT_LITERAL
    (166) primary_expression -> . MINUS FLOAT_LITERAL

    HASH            shift and go to state 26
    BACKSLASH       reduce using rule 87 (empty -> .)
    DEFINE          shift and go to state 28
    CONST           shift and go to state 30
    SHOW            shift and go to state 31
    SAVE            shift and go to state 32
    DELETE          shift and go to state 33
    RETURN          shift and go to state 34
    THROW           shift and go to state 35
    CONNECT         shift and go to state 36
    QUERY           shift and go to state 38
    CLASS           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 54
    TRY             shift and go to state 55
    TRANSACTION     shift and go to state 56
    APPLY           shift and go to state 57
    ASYNC           shift and go to state 59
    FUNCTION        shift and go to state 60
    IDENTIFIER      shift and go to state 27
    NOT             shift and go to state 69
    AWAIT           shift and go to state 70
    INT_LITERAL     shift and go to state 73
    FLOAT_LITERAL   shift and go to state 74
    STRING_LITERAL  shift and go to state 37
    BOOL_LITERAL    shift and go to state 75
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 67

    statement_list_opt             shift and go to state 356
    statement_list                 shift and go to state 151
    jtml_element                   shift and go to state 152
    empty                          shift and go to state 153
    statement                      shift and go to state 144
    variable_declaration           shift and go to state 7
    const_declaration              shift and go to state 8
    show_statement                 shift and go to state 9
    save_statement                 shift and go to state 10
    delete_statement               shift and go to state 11
    return_statement               shift and go to state 12
    throw_statement                shift and go to state 13
    connect_statement              shift and go to state 14
    query_statement                shift and go to state 15
    crypto_statement               shift and go to state 16
    quantum_statement              shift and go to state 17
    expression_statement           shift and go to state 18
    function_declaration           shift and go to state 19
    class_declaration              shift and go to state 20
    if_statement                   shift and go to state 21
    while_statement                shift and go to state 22
    for_statement                  shift and go to state 23
    try_catch_finally              shift and go to state 24
    transaction_block              shift and go to state 25
    expression                     shift and go to state 29
    crypto_generate_key_expr       shift and go to state 39
    crypto_derive_public_key_expr  shift and go to state 40
    crypto_encrypt_expr            shift and go to state 41
    crypto_decrypt_expr            shift and go to state 42
    crypto_hash_expr               shift and go to state 43
    crypto_sign_expr               shift and go to state 44
    crypto_verify_expr             shift and go to state 45
    quantum_define_qubit           shift and go to state 46
    quantum_apply                  shift and go to state 47
    quantum_measure_expr           shift and go to state 48
    function_head                  shift and go to state 49
    assignment_expression          shift and go to state 58
    logical_or_expression          shift and go to state 61
    logical_and_expression         shift and go to state 62
    equality_expression            shift and go to state 63
    relational_expression          shift and go to state 64
    additive_expression            shift and go to state 65
    multiplicative_expression      shift and go to state 66
    unary_expression               shift and go to state 68
    postfix_expression             shift and go to state 71
    primary_expression             shift and go to state 72

state 352

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM . COLON STRING_LITERAL

    COLON           shift and go to state 357


state 353

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM . COLON STRING_LITERAL

    COLON           shift and go to state 358


state 354

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM . COLON STRING_LITERAL

    COLON           shift and go to state 359


state 355

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY . COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    COLON           shift and go to state 360


state 356

    (32) try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt .

    BACKSLASH       reduce using rule 32 (try_catch_finally -> TRY BACKSLASH statement_list_opt CATCH LPAREN IDENTIFIER RPAREN BACKSLASH statement_list_opt FINALLY BACKSLASH statement_list_opt .)


state 357

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON . STRING_LITERAL

    STRING_LITERAL  shift and go to state 361


state 358

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON . STRING_LITERAL

    STRING_LITERAL  shift and go to state 362


state 359

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON . STRING_LITERAL

    STRING_LITERAL  shift and go to state 363


state 360

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON . STRING_LITERAL ALGORITHM COLON STRING_LITERAL

    STRING_LITERAL  shift and go to state 364


state 361

    (65) crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .

    BACKSLASH       reduce using rule 65 (crypto_encrypt_expr -> DEFINE IDENTIFIER EQUALS ENCRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .)


state 362

    (74) crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .

    BACKSLASH       reduce using rule 74 (crypto_decrypt_expr -> DEFINE IDENTIFIER EQUALS DECRYPT DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .)


state 363

    (103) crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .

    BACKSLASH       reduce using rule 103 (crypto_sign_expr -> DEFINE IDENTIFIER EQUALS SIGN DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .)


state 364

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL . ALGORITHM COLON STRING_LITERAL

    ALGORITHM       shift and go to state 365


state 365

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM . COLON STRING_LITERAL

    COLON           shift and go to state 366


state 366

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON . STRING_LITERAL

    STRING_LITERAL  shift and go to state 367


state 367

    (113) crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .

    BACKSLASH       reduce using rule 113 (crypto_verify_expr -> DEFINE IDENTIFIER EQUALS VERIFY SIGNATURE COLON STRING_LITERAL DATA COLON STRING_LITERAL WITH KEY COLON STRING_LITERAL ALGORITHM COLON STRING_LITERAL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for HASH in state 79 resolved as shift
WARNING: shift/reduce conflict for HASH in state 125 resolved as shift
WARNING: shift/reduce conflict for BACKSLASH in state 130 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 177 resolved as shift
